info:
  title: PaySuper payment solution service.
  version: "1.0.0"
  description: Swagger Specification for PaySuper Management API.
servers:
  - url: "https://api.pay.super.com"
    description: Production API
components:
  schemas:
    TokenCreationResponse:
      type: object
      properties:
        token:
          description: "The secure string which contains encrypted information about your customer and sales option data."
          type: string
        payment_form_url:
          description: "The PaySuper-hosted URL of a payment form."
          type: string
    MerchantChangeStatusRequest:
      type: object
      properties:
        status:
          description: "The merchant's status. Available values: 5 - removed, 6 - rejected."
          type: integer
        message:
          description: "The information about changes."
          type: string
    ReportFile:
      type: object
      properties:
        report_type:
          description: "The report type. Available values: transactions, vat, vat_transactions, royalty, royalty_transactions, payout, agreement."
          type: string
        file_type:
          description: "The report file type. Available values: pdf, xlsx, csv."
          type: string
        template:
          description: "The unique identifier for the report template."
          type: string
        retention_time:
          description: "Retention time for the report."
          type: integer
        send_notification:
          description: "Has a true value if it's required to send a notification about the report file to the user."
          type: boolean
    MerchantContact:
      type: object
      properties:
        authorized:
          type: object
          required:
          - name
          - email
          - phone
          properties:
            name:
              description: "The authorised person's full name."
              type: string
            email:
              description: "The authorised person's email address."
              type: string
            phone:
              description: "The authorised person's phone."
              type: string
            position:
              description: "The authorised person's position in the company."
              type: string
        technical:
          type: object
          required:
          - name
          - email
          - phone
          properties:
            name:
              description: "The technical person's full name."
              type: string
            email:
              description: "The technical person's email address."
              type: string
            phone:
              description: "The technical person's phone."
              type: string
    OrderViewPublic:
      type: object
      properties:
        uuid:
          description: "The unique identifier for the order."
          type: string
        total_payment_amount:
          description: "The total payment amount."
          type: number
        currency:
          description: "The currency of the payment. Three-letter currency code ISO 4217, in uppercase."
          type: string
        project:
          type: object
          properties:
            id:
              description: "The unique identifier for the project."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant."
              type: string
            url_success:
              description: "The redirect URL for the successful payment."
              type: string
            url_fail:
              description: "The redirect URL for the failed payment."
              type: string
            url_check_account:
              description: "The default URL to send a request to the merchant project for the payment data verification."
              type: string
            url_process_payment:
              description: "The default URL to send a notification request to the merchant project."
              type: string
            callback_protocol:
              description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
              type: string
            status:
              description: "4 - the project is removed."
              type: integer
            redirect_settings:
              type: object
              properties:
                mode:
                  description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                  type: string
                delay:
                  description: "The delay before the customer's redirection to the return URL. Default value is 0."
                  type: integer
                usage:
                  description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                  type: string
                button_caption:
                  description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                  type: string
        transaction:
          description: "The unique identifier for the order in the payment system."
          type: string
        payment_method:
          type: object
          properties:
            title:
              description: "The payment method's name."
              type: string
            external_id:
              description: "The unique identifier for the payment method in the payment system."
              type: string
            payment_system_id:
              description: "The unique identifier for the payment system in PaySuper."
              type: string
            type:
              description: "The payment method's group alias."
              type: string
            saved:
              description: "Has a true value if contains a saved card as a payment method."
              type: boolean
            card:
              type: object
              properties:
                first6:
                  description: "The first 6 digits of the card number."
                  type: string
                last4:
                  description: "The last 4 digits of the card number."
                  type: string
                masked:
                  description: "The mask for a customer’s card number."
                  type: string
                expiry_month:
                  description: "The validity month of the card."
                  type: string
                expiry_year:
                  description: "The validity year of the card."
                  type: string
                brand:
                  description: "The brand of the card issuer."
                  type: string
                fingerprint:
                  description: "The internal fingerprint for given card."
                  type: string
                secure3d:
                  description: "Has a true value if 3D-secure is used for the payment."
                  type: boolean
            wallet:
              type: object
              properties:
                brand:
                  description: "The name of the wallet."
                  type: string
                account:
                  description: "The customer identity in the wallet."
                  type: string
            crypto_currency:
              type: object
              properties:
                brand:
                  description: "The name of the crypto currency."
                  type: string
                address:
                  description: "The customer’s address in the crypto currency."
                  type: string
            handler:
              description: "The unique identifier for handler of the payment system in PaySuper."
              type: string
            refund_allowed:
              description: "Has a true value if the payment method allows a refund."
              type: boolean
        country_code:
          description: "Two-letter country code in ISO 3166-1, in uppercase."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        locale:
          description: "The customer’s locale name. Four-letter language code in ISO 639, for instance en-US."
          type: string
        status:
          description: "The current status of the order. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
          type: string
        user:
          type: object
          properties:
            external_id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            name:
              description: "The customer's name."
              type: string
            email:
              description: "The customer's email address."
              type: string
            email_verified:
              description: "Whether the customer's email address has been verified on the merchant side."
              type: boolean
            phone:
              description: "The customer's phone number."
              type: string
            phone_verified:
              description: "Whether the customer's phone number has been verified on the merchant side."
              type: boolean
            ip:
              description: "The customer's IP address."
              type: string
            locale:
              description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
              type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        billing_address:
          type: object
          properties:
            country:
              description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            city:
              description: "The customer’s city."
              type: string
            postal_code:
              description: "The customer's postal code."
              type: string
            state:
              description: "The customer's state code in ISO 3166-2."
              type: string
        type:
          description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency, the simple checkout). Available values: key, product, virtual_currency, simple."
          type: string
        is_vat_deduction:
          description: "Has a true value if VAT can be deducted."
          type: boolean
        gross_revenue:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        tax_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        tax_fee_currency_exchange_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        tax_fee_total:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        method_fee_total:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        method_fee_tariff:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        method_fixed_fee_tariff:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        paysuper_fixed_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        fees_total:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        fees_total_local:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        net_revenue:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_gross_revenue:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        method_refund_fee_tariff:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        merchant_refund_fixed_fee_tariff:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_tax_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_tax_fee_currency_exchange_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        paysuper_refund_tax_fee_currency_exchange_fee:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_reverse_revenue:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_fees_total:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        refund_fees_total_local:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        issuer:
          type: object
          properties:
            url:
              description: "The referrer URL."
              type: string
            embedded:
              description: "Has a true value if the form is embedded."
              type: boolean
            reference:
              description: "The unique identifier for the reference."
              type: string
            reference_type:
              description: "The reference type."
              type: string
            utm_source:
              description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
              type: string
            utm_medium:
              description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
              type: string
            utm_campaign:
              description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
              type: string
            referrer_host:
              description: "The referrer's host."
              type: string
        items:
          type: array
          items:
            required:
            - id
            - object
            - sku
            - name
            - description
            - amount
            - currency
            properties:
              id:
                description: "The unique identifier for the item."
                type: string
              object:
                description: "String representing the item’s type."
                type: string
              sku:
                description: "The SKU of the product."
                type: string
              name:
                description: "The item's name."
                type: string
              description:
                description: "The item's description."
                type: string
              amount:
                description: "The item's price."
                type: number
              currency:
                description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              images:
                description: "The item's images URL list."
                type: array
                items:
                  type: string
              url:
                description: "The item's URL in the merchant project."
                type: string
              platform_id:
                description: "The unique identifier for the platform."
                type: string
              code:
                description: "The activation code."
                type: string
        merchant_payout_currency:
          description: "The merchant's payout currency."
          type: string
        parent_order:
          type: object
          properties:
            id:
              description: "The internal unique identifier for the order in PaySuper."
              type: string
            uuid:
              description: "The public unique identifier for the order in PaySuper."
              type: string
        refund:
          type: object
          properties:
            amount:
              description: "The refund amount."
              type: number
            currency:
              description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            reason:
              description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
              type: string
            code:
              description: "The internal identity for the refund reason in PaySuper."
              type: string
            receipt_number:
              description: "The unique identifier for the refund's receipt."
              type: string
            receipt_url:
              description: "The URL in PaySuper service for online access to the refund's receipt."
              type: string
        cancellation:
          type: object
          properties:
            code:
              description: "The internal identity for the cancellation reason in PaySuper."
              type: string
            reason:
              description: "The cancellation reason."
              type: string
        operating_company_id:
          description: "The unique identifier for the merchant's operating company."
          type: string
        refund_allowed:
          description: "Has a true value if the refund is allowed."
          type: boolean
        order_charge:
          type: object
          properties:
            amount:
              description: "The amount value."
              type: number
            currency:
              description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
        payment_ip_country:
          description: "The customer's country code by the customer's IP address."
          type: string
        is_ip_country_mismatch_bin:
          description: "Has a true value if the country from the card's BIN has not been matched to the country defined by the IP address (for card payments only)."
          type: boolean
        billing_country_changed_by_user:
          description: "Has a true value if the country was selected by the customer."
          type: boolean
        vat_payer:
          description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
          type: string
        is_production:
          description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
          type: boolean
        merchant_info:
          type: object
          properties:
            company_name:
              description: "The merchant's company name."
              type: string
            agreement_number:
              description: "The merchant's license agreement number."
              type: string
    MoneyBackCostMerchant:
      type: object
      properties:
        id:
          description: "The unique identifier for the record about the merchant's tariffs."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        name:
          description: "The payment method's name."
          type: string
        payout_currency:
          description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        undo_reason:
          description: "The return reason. Available values: refund, reversal, chargeback."
          type: string
        region:
          description: "The customer's region."
          type: string
        country:
          description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        days_from:
          description: "The number of days after the payment operation."
          type: integer
        payment_stage:
          description: "The payment stage."
          type: integer
        percent:
          description: "The fee of the payment method in percent."
          type: number
        fix_amount:
          description: "The fixed fee of the payment method in the particular currency."
          type: number
        fix_amount_currency:
          description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
          type: string
        is_paid_by_merchant:
          description: "Has a true value if the commission was paid by the merchant."
          type: boolean
        is_active:
          description: "Has a true value if the rates record is active for the merchant."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
    FindByZipCodeResponse:
      type: object
      properties:
        count:
          description: "The total number of found cities."
          type: integer
        items:
          type: array
          items:
            properties:
              zip:
                description: "The postal code."
                type: string
              country:
                description: "The country's name."
                type: string
              city:
                description: "The city's name."
                type: string
              state:
                type: object
                properties:
                  code:
                    description: "The state's postal code."
                    type: string
                  name:
                    description: "The state's name."
                    type: string
    UserRole:
      type: object
      required:
      - id
      - merchant_id
      - role
      - user_id
      - first_name
      - last_name
      - email
      properties:
        id:
          description: "The unique identifier for the user's role."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant (only for merchant users)."
          type: string
        role:
          description: "The user's role."
          type: string
        status:
          description: "The user's invitation status. Available values: invited, approved."
          type: string
        user_id:
          description: "The unique identifier for the user."
          type: string
        first_name:
          description: "The user's first name."
          type: string
        last_name:
          description: "The user's last name."
          type: string
        email:
          description: "The user's email address."
          type: string
    MerchantBalance:
      type: object
      properties:
        id:
          description: "The unique identifier for the merchant's balance."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        currency:
          description: "The balance currency. Three-letter currency code ISO 4217, in uppercase."
          type: string
        debit:
          description: "The debit balance."
          type: number
        credit:
          description: "The credit balance."
          type: number
        rolling_reserve:
          description: "The rolling reserve balance."
          type: number
        total:
          description: "The total amount."
          type: number
    Paylink:
      type: object
      properties:
        id:
          description: "The unique identifier for the payment link."
          type: string
        object:
          description: "The system constant that contains the returned object's type. Const value: paylink."
          type: string
        products:
          description: "The list of the payment link's products."
          type: array
          items:
            type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        project_id:
          description: "The unique identifier for the project."
          type: string
        name:
          description: "The payment link's name."
          type: string
        is_expired:
          description: "Has a true value if the payment link has expired."
          type: boolean
        visits:
          description: "The total number of visits."
          type: integer
        no_expiry_date:
          description: "Has a true value if the payment link has no expiry date."
          type: boolean
        products_type:
          description: "The type of products. Available values: product, key."
          type: string
        total_transactions:
          description: "The total number of transactions."
          type: integer
        sales_count:
          description: "The total number of sales."
          type: integer
        returns_count:
          description: "The total number of returns."
          type: integer
        conversion:
          description: "The conversion - sales per visits relation."
          type: number
        gross_sales_amount:
          description: "The gross amount of sales."
          type: number
        gross_returns_amount:
          description: "The gross amount of returns."
          type: number
        gross_total_amount:
          description: "The gross revenue."
          type: number
        transactions_currency:
          description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
          type: string
    CheckInviteTokenRequest:
      type: object
      required:
      - token
      - email
      properties:
        token:
          description: "The invitation token."
          type: string
        email:
          description: "The user's email address."
          type: string
    ListPlatformsResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        limit:
          description: "The number of platforms returned in one page."
          type: integer
        offset:
          description: "The ranking number of the first item on the page."
          type: integer
        count:
          description: "The total number of found products."
          type: integer
        platforms:
          type: array
          items:
            required:
            - id
            properties:
              id:
                description: "The unique identifier for the platform."
                type: string
              name:
                description: "The platform's name. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
                type: string
    ListRefundsResponse:
      type: object
      properties:
        count:
          description: "The total number of found refunds."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the refund in PaySuper."
                type: string
              original_order:
                type: object
                properties:
                  id:
                    description: "The unique identifier for the refund in PaySuper."
                    type: string
                  uuid:
                    description: "The public unique identifier for the refund in PaySuper."
                    type: string
              external_id:
                description: "The unique identifier for the refund in the payment system."
                type: string
              amount:
                description: "The refund amount."
                type: number
              creatorId:
                description: "The unique identifier for the user initiated an action on the return."
                type: string
              reason:
                description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
                type: string
              currency:
                description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
                type: string
              status:
                description: "The refund status. Available values: 0 - created, 1 - rejected on the payment system side, 2 - in process on the payment system side, 3 - successfully completed."
                type: integer
              payer_data:
                type: object
                properties:
                  country:
                    description: "The customer's country."
                    type: string
                  zip:
                    description: "The customer's ZIP code."
                    type: string
                  state:
                    description: "The customer's state."
                    type: string
              sales_tax:
                description: "The refund tax fee."
                type: number
              is_chargeback:
                description: "Has a true value if this refund is a chargeback."
                type: boolean
              created_order_id:
                description: "The unique identifier for the original order for which the refund was made."
                type: string
    OperatingCompany:
      type: object
      properties:
        id:
          description: "The unique identifier for the operating company."
          type: string
        name:
          description: "The operating company's name."
          type: string
        country:
          description: "The operating company's country."
          type: string
        registration_number:
          description: "The operating company's registration number."
          type: string
        vat_number:
          description: "The operating company's VAT number."
          type: string
        address:
          description: "The operating company's address."
          type: string
        vat_address:
          description: "The operating company's VAT address."
          type: string
        signatory_name:
          description: "The authorized signer's name of the operating company."
          type: string
        signatory_position:
          description: "The authorized signer's position in the operating company."
          type: string
        banking_details:
          description: "The baking details including bank, bank address, account number, SWIFT/BIC, intermediary bank."
          type: string
        payment_countries:
          description: "The list of the countries allowed for a payment."
          type: array
          items:
            type: string
        registration_date:
          description: "The date of the operating company registration."
          type: string
        email:
          description: "The operating company's email."
          type: string
    GroupStatCommon:
      type: object
      properties:
        top:
          type: array
          items:
            properties:
              paylink_id:
                description: "The unique identifier for the payment link."
                type: string
              visits:
                description: "The total number of visits."
                type: integer
              total_transactions:
                description: "The total number of transactions."
                type: integer
              sales_count:
                description: "The total number of sales."
                type: integer
              returns_count:
                description: "The total number of returns."
                type: integer
              gross_sales_amount:
                description: "The gross amount of sales."
                type: number
              gross_returns_amount:
                description: "The gross amount of returns."
                type: number
              gross_total_amount:
                description: "The gross revenue."
                type: number
              transactions_currency:
                description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
                type: string
              conversion:
                description: "The conversion - sales per visits relation."
                type: number
              country_code:
                description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              date:
                description: "The date of the summary."
                type: string
              referrer_host:
                description: "The address of the webpage where the request originated."
                type: string
              utm:
                type: object
                properties:
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
        total:
          type: object
          properties:
            paylink_id:
              description: "The unique identifier for the payment link."
              type: string
            visits:
              description: "The total number of visits."
              type: integer
            total_transactions:
              description: "The total number of transactions."
              type: integer
            sales_count:
              description: "The total number of sales."
              type: integer
            returns_count:
              description: "The total number of returns."
              type: integer
            gross_sales_amount:
              description: "The gross amount of sales."
              type: number
            gross_returns_amount:
              description: "The gross amount of returns."
              type: number
            gross_total_amount:
              description: "The gross revenue."
              type: number
            transactions_currency:
              description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
              type: string
            conversion:
              description: "The conversion - sales per visits relation."
              type: number
            country_code:
              description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            date:
              description: "The date of the summary."
              type: string
            referrer_host:
              description: "The address of the webpage where the request originated."
              type: string
            utm:
              type: object
              properties:
                utm_source:
                  description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                  type: string
                utm_medium:
                  description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                  type: string
                utm_campaign:
                  description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                  type: string
    ListKeyProductsResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        limit:
          description: "The number of products returned in one page."
          type: integer
        offset:
          description: "The ranking number of the first item on the page."
          type: integer
        count:
          description: "The total number of found products."
          type: integer
        products:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the key-activated product."
                type: string
              project_id:
                description: "The unique identifier for the project."
                type: string
              object:
                description: "The system constant that contains the returned object's type."
                type: string
              sku:
                description: "The SKU of the product."
                type: string
              default_currency:
                description: "The product's default currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              enabled:
                description: "Has a true value if the product is enabled."
                type: boolean
              platforms:
                type: array
                items:
                  properties:
                    id:
                      description: "The unique name of the platform. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
                      type: string
                    name:
                      description: "The full name of the platform. (for instance for gog - Good old games.com)"
                      type: string
                    prices:
                      type: array
                      items:
                        properties:
                          amount:
                            description: "The product's price."
                            type: number
                          currency:
                            description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                            type: string
                          region:
                            description: "The product's price region."
                            type: string
                          is_virtual_currency:
                            description: "Has a true value if the product's amount in the virtual currency."
                            type: boolean
                    eula_url:
                      description: "The license agreement link of the platform."
                      type: string
                    activation_url:
                      description: "The link of the key's activation rules for the platform."
                      type: string
                    count:
                      description: "The number of created keys for the platform."
                      type: integer
              cover:
                type: object
                properties:
                  images:
                    type: object
                    properties:
                      en:
                        description: "The URL for EN localization."
                        type: string
                      ru:
                        description: "The URL for RU localization."
                        type: string
                      es:
                        description: "The URL for ES localization."
                        type: string
                      de:
                        description: "The URL for DE localization."
                        type: string
                      zh:
                        description: "The URL for ZH localization."
                        type: string
                      fr:
                        description: "The URL for FR localization."
                        type: string
                      ar:
                        description: "The URL for AR localization."
                        type: string
                      pt:
                        description: "The URL for PT localization."
                        type: string
                      it:
                        description: "The URL for IT localization."
                        type: string
                      pl:
                        description: "The URL for PL localization."
                        type: string
                      el:
                        description: "The URL for EL localization."
                        type: string
                      ko:
                        description: "The URL for KO localization."
                        type: string
                      ja:
                        description: "The URL for JA localization."
                        type: string
                      vl:
                        description: "The URL for VL localization."
                        type: string
                      he:
                        description: "The URL for HE localization."
                        type: string
                      th:
                        description: "The URL for TH localization."
                        type: string
                      cs:
                        description: "The URL for CS localization."
                        type: string
                      bg:
                        description: "The URL for BG localization."
                        type: string
                      fi:
                        description: "The URL for FI localization."
                        type: string
                      sv:
                        description: "The URL for SV localization."
                        type: string
                      da:
                        description: "The URL for DA localization."
                        type: string
                      tr:
                        description: "The URL for TR localization."
                        type: string
                  use_one_for_all:
                    description: "Has a true value if the single cover is used for all localizations."
                    type: boolean
              url:
                description: "The product's URL in the merchant project."
                type: string
              pricing:
                description: "The pricing mode. Available values: currency, manual, steam, default."
                type: string
    InviteUserMerchantRequest:
      type: object
      required:
      - merchant_id
      - email
      - role
      properties:
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        email:
          description: "The user's email address to obtain an invitation about the merchant role."
          type: string
        role:
          description: "The merchant role for the invited user. Available values: merchant_developer, merchant_accounting, merchant_support, merchant_view_only."
          type: string
    PlatformKeysFileRequest:
      type: object
      required:
      - file
      properties:
        file:
          description: "The file with keys."
          type: array
          items:
            type: byte
    PaymentChannelCostSystem:
      type: object
      properties:
        id:
          description: "The unique identifier for the payment method."
          type: string
        name:
          description: "The payment method's name."
          type: string
        region:
          description: "The customer's region."
          type: string
        country:
          description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        percent:
          description: "The fee of the payment method in percent."
          type: number
        fix_amount:
          description: "The fixed fee of the payment method in the particular currency."
          type: number
        fix_amount_currency:
          description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
          type: string
        is_active:
          description: "Has a true value if the rates record is active."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
    ChangePaymentMethodParamsResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          description: "The response error message (if any)."
          type: string
    ProductPrice:
      type: object
      properties:
        amount:
          description: "The product's price."
          type: number
        currency:
          description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        region:
          description: "The product's price region."
          type: string
        is_virtual_currency:
          description: "Has a true value if the product's amount in the virtual currency."
          type: boolean
    KeyProductInfo:
      type: object
      properties:
        id:
          description: "The unique identifier for the product."
          type: string
        project_id:
          description: "The unique identifier for the product's project."
          type: string
        name:
          description: "The localized name of the product."
          type: string
        description:
          description: "The localized concise description of the product."
          type: string
        long_description:
          description: "The localized extended description of the product."
          type: string
        images:
          description: "The list of the URL images of the product."
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the platform."
                type: string
              name:
                description: "The platform's name."
                type: string
              price:
                type: object
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency."
                    type: string
                  region:
                    description: "The product's region."
                    type: string
                  is_fallback:
                    description: "Has a true value if the price was calculated in the default currency instead of the specified."
                    type: boolean
    PrivateTransactionsPaginate:
      type: object
      properties:
        count:
          description: "The total number of transactions."
          type: integer
        items:
          type: array
          items:
            properties:
              uuid:
                description: "The public unique identifier for the order in PaySuper."
                type: string
              total_payment_amount:
                description: "The total payment amount including all commissions."
                type: number
              currency:
                description: "The currency of the order. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              project:
                type: object
                properties:
                  id:
                    description: "The unique identifier for the project."
                    type: string
                  merchant_id:
                    description: "The unique identifier for the merchant."
                    type: string
                  url_success:
                    description: "The redirect URL for the successful payment."
                    type: string
                  url_fail:
                    description: "The redirect URL for the failed payment."
                    type: string
                  url_check_account:
                    description: "The default URL to send a request to the merchant project for the payment data verification."
                    type: string
                  url_process_payment:
                    description: "The default URL to send a notification request to the merchant project."
                    type: string
                  callback_protocol:
                    description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                    type: string
                  status:
                    description: "4 - the project is removed."
                    type: integer
                  redirect_settings:
                    type: object
                    properties:
                      mode:
                        description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                        type: string
                      delay:
                        description: "The delay before the customer's redirection to the return URL. Default value is 0."
                        type: integer
                      usage:
                        description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                        type: string
                      button_caption:
                        description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                        type: string
              transaction:
                description: "The unique identifier for the order in the payment system."
                type: string
              payment_method:
                type: object
                properties:
                  title:
                    description: "The payment method's name."
                    type: string
                  external_id:
                    description: "The unique identifier for the payment method in the payment system."
                    type: string
                  payment_system_id:
                    description: "The unique identifier for the payment system in PaySuper."
                    type: string
                  type:
                    description: "The payment method's group alias."
                    type: string
                  saved:
                    description: "Has a true value if contains a saved card as a payment method."
                    type: boolean
                  card:
                    type: object
                    properties:
                      first6:
                        description: "The first 6 digits of the card number."
                        type: string
                      last4:
                        description: "The last 4 digits of the card number."
                        type: string
                      masked:
                        description: "The mask for a customer’s card number."
                        type: string
                      expiry_month:
                        description: "The validity month of the card."
                        type: string
                      expiry_year:
                        description: "The validity year of the card."
                        type: string
                      brand:
                        description: "The brand of the card issuer."
                        type: string
                      fingerprint:
                        description: "The internal fingerprint for given card."
                        type: string
                      secure3d:
                        description: "Has a true value if 3D-secure is used for the payment."
                        type: boolean
                  wallet:
                    type: object
                    properties:
                      brand:
                        description: "The name of the wallet."
                        type: string
                      account:
                        description: "The customer identity in the wallet."
                        type: string
                  crypto_currency:
                    type: object
                    properties:
                      brand:
                        description: "The name of the crypto currency."
                        type: string
                      address:
                        description: "The customer’s address in the crypto currency."
                        type: string
                  handler:
                    description: "The unique identifier for handler of the payment system in PaySuper."
                    type: string
                  refund_allowed:
                    description: "Has a true value if the payment method allows a refund."
                    type: boolean
              country_code:
                description: "The customer's country code. Two-letter country code in ISO 3166-1, in uppercase."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              locale:
                description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                type: string
              status:
                description: "The status of the order. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
                type: string
              user:
                type: object
                properties:
                  external_id:
                    description: "The unique identifier for the customer in the merchant project."
                    type: string
                  name:
                    description: "The customer's name."
                    type: string
                  email:
                    description: "The customer's email address."
                    type: string
                  email_verified:
                    description: "Whether the customer's email address has been verified on the merchant side."
                    type: boolean
                  phone:
                    description: "The customer's phone number."
                    type: string
                  phone_verified:
                    description: "Whether the customer's phone number has been verified on the merchant side."
                    type: boolean
                  ip:
                    description: "The customer's IP address."
                    type: string
                  locale:
                    description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                    type: string
                  address:
                    type: object
                    properties:
                      country:
                        description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      city:
                        description: "The customer’s city."
                        type: string
                      postal_code:
                        description: "The customer's postal code."
                        type: string
                      state:
                        description: "The customer's state code in ISO 3166-2."
                        type: string
              billing_address:
                type: object
                properties:
                  country:
                    description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  city:
                    description: "The customer’s city."
                    type: string
                  postal_code:
                    description: "The customer's postal code."
                    type: string
                  state:
                    description: "The customer's state code in ISO 3166-2."
                    type: string
              type:
                description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency the simple checkout). For products created as Game Keys use the key type, as Virtual Items - the product type, as Virtual Currency - the virtual_currency type, for a simple checkout - the simple type. Enum values: key, product, virtual_currency, simple."
                type: string
              is_vat_deduction:
                description: "Has a true value if VAT can be deducted."
                type: boolean
              payment_gross_revenue_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_gross_revenue_origin:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_tax_fee_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_tax_fee_origin:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_gross_revenue_fx:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_gross_revenue_fx_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_gross_revenue_fx_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_fee_tariff_self_cost:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_fee_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_fixed_fee_tariff_fx_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_fixed_fee_tariff_self_cost:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_fixed_fee_tariff_total_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_fixed_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_fixed_fee_fx_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              net_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_total_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_total_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_gross_revenue_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_gross_revenue_origin:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_tax_fee_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_tax_fee_origin:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_gross_revenue_fx:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_refund_fee_tariff_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_refund_fixed_fee_tariff_self_cost:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              merchant_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_method_refund_fixed_fee_tariff_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_reverse_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_refund_total_profit:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              issuer:
                type: object
                properties:
                  url:
                    description: "The referrer URL."
                    type: string
                  embedded:
                    description: "Has a true value if the form is embedded."
                    type: boolean
                  reference:
                    description: "The unique identifier for the reference."
                    type: string
                  reference_type:
                    description: "The reference type."
                    type: string
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
                  referrer_host:
                    description: "The referrer's host."
                    type: string
              items:
                type: array
                items:
                  required:
                  - id
                  - object
                  - sku
                  - name
                  - description
                  - amount
                  - currency
                  properties:
                    id:
                      description: "The unique identifier for the item."
                      type: string
                    object:
                      description: "String representing the item’s type."
                      type: string
                    sku:
                      description: "The SKU of the product."
                      type: string
                    name:
                      description: "The item's name."
                      type: string
                    description:
                      description: "The item's description."
                      type: string
                    amount:
                      description: "The item's price."
                      type: number
                    currency:
                      description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    images:
                      description: "The item's images URL list."
                      type: array
                      items:
                        type: string
                    url:
                      description: "The item's URL in the merchant project."
                      type: string
                    platform_id:
                      description: "The unique identifier for the platform."
                      type: string
                    code:
                      description: "The activation code."
                      type: string
              merchant_payout_currency:
                description: "The merchant's payout currency."
                type: string
              parent_order:
                type: object
                properties:
                  id:
                    description: "The internal unique identifier for the order in PaySuper."
                    type: string
                  uuid:
                    description: "The public unique identifier for the order in PaySuper."
                    type: string
              refund:
                type: object
                properties:
                  amount:
                    description: "The refund amount."
                    type: number
                  currency:
                    description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
                    type: string
                  code:
                    description: "The internal identity for the refund reason in PaySuper."
                    type: string
                  receipt_number:
                    description: "The unique identifier for the refund's receipt."
                    type: string
                  receipt_url:
                    description: "The URL in PaySuper service for online access to the refund's receipt."
                    type: string
              cancellation:
                type: object
                properties:
                  code:
                    description: "The internal identity for the cancellation reason in PaySuper."
                    type: string
                  reason:
                    description: "The cancellation reason."
                    type: string
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
              is_high_risk:
                description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
                type: boolean
              refund_allowed:
                description: "Has a true value if the payment method allows a refund."
                type: boolean
              order_charge:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_ip_country:
                description: "The IP address of the country where the order was paid."
                type: string
              is_ip_country_mismatch_bin:
                description: "Has a true value if the country from the card's BIN has not been matched to the country defined by the IP address (for card payments only)."
                type: boolean
              billing_country_changed_by_user:
                description: "Has a true value if the country was selected by the customer."
                type: boolean
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              is_production:
                description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
                type: boolean
              merchant_info:
                type: object
                properties:
                  company_name:
                    description: "The merchant's company name."
                    type: string
                  agreement_number:
                    description: "The merchant's license agreement number."
                    type: string
              order_charge_before_vat:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_rate:
                description: "The tax rate."
                type: number
    MoneyBackCostSystem:
      type: object
      properties:
        id:
          description: "The unique identifier for the record about the merchant's tariffs."
          type: string
        name:
          description: "The payment method's name."
          type: string
        payout_currency:
          description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        undo_reason:
          description: "The return reason. Available values: refund, reversal, chargeback."
          type: string
        region:
          description: "The customer's region."
          type: string
        country:
          description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        days_from:
          description: "The number of days after the payment operation."
          type: integer
        payment_stage:
          description: "The payment stage."
          type: integer
        percent:
          description: "The fee of the payment method in percent."
          type: number
        fix_amount:
          description: "The fixed fee of the payment method in the particular currency."
          type: number
        is_active:
          description: "Has a true value if the rates record is active."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
        fix_amount_currency:
          description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
          type: string
    ChangeProjectResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
          required:
          - merchant_id
          properties:
            id:
              description: "The unique identifier for the project."
              type: string
            merchant_id:
              description: "The unique identifier for the project's merchant."
              type: string
            callback_protocol:
              description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
              type: string
            limits_currency:
              description: "The currency of the limit amount."
              type: string
            min_payment_amount:
              description: "The minimum order amount."
              type: number
            max_payment_amount:
              description: "The maximum order amount."
              type: number
            secret_key:
              description: "The project's secret key for sign notification requests"
              type: string
            url_process_payment:
              description: "The URL configured on the merchant project to get webhooks from PaySuper."
              type: string
            url_redirect_fail:
              description: "The default URL to redirect a customer after the failed payment."
              type: string
            url_redirect_success:
              description: "The default URL to redirect a customer after the successful payment."
              type: string
            status:
              description: "4 - the project is removed."
              type: integer
            products_count:
              description: "The number of products in the project."
              type: integer
            localizations:
              description: "The list of languages for the project's and its products descriptions localization."
              type: array
              items:
                type: string
            currencies:
              type: array
              items:
                properties:
                  currency:
                    description: "Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The region of the price."
                    type: string
            cover:
              type: object
              properties:
                images:
                  type: object
                  properties:
                    en:
                      description: "The URL for EN localization."
                      type: string
                    ru:
                      description: "The URL for RU localization."
                      type: string
                    es:
                      description: "The URL for ES localization."
                      type: string
                    de:
                      description: "The URL for DE localization."
                      type: string
                    zh:
                      description: "The URL for ZH localization."
                      type: string
                    fr:
                      description: "The URL for FR localization."
                      type: string
                    ar:
                      description: "The URL for AR localization."
                      type: string
                    pt:
                      description: "The URL for PT localization."
                      type: string
                    it:
                      description: "The URL for IT localization."
                      type: string
                    pl:
                      description: "The URL for PL localization."
                      type: string
                    el:
                      description: "The URL for EL localization."
                      type: string
                    ko:
                      description: "The URL for KO localization."
                      type: string
                    ja:
                      description: "The URL for JA localization."
                      type: string
                    vl:
                      description: "The URL for VL localization."
                      type: string
                    he:
                      description: "The URL for HE localization."
                      type: string
                    th:
                      description: "The URL for TH localization."
                      type: string
                    cs:
                      description: "The URL for CS localization."
                      type: string
                    bg:
                      description: "The URL for BG localization."
                      type: string
                    fi:
                      description: "The URL for FI localization."
                      type: string
                    sv:
                      description: "The URL for SV localization."
                      type: string
                    da:
                      description: "The URL for DA localization."
                      type: string
                    tr:
                      description: "The URL for TR localization."
                      type: string
                use_one_for_all:
                  description: "Has a true value if the single cover is used for all localizations."
                  type: boolean
            virtual_currency:
              type: object
              properties:
                logo:
                  description: "The logo URL for the virtual currency."
                  type: string
                prices:
                  type: array
                  items:
                    properties:
                      amount:
                        description: "The product's price."
                        type: number
                      currency:
                        description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                        type: string
                      region:
                        description: "The product's price region."
                        type: string
                      is_virtual_currency:
                        description: "Has a true value if the product's amount in the virtual currency."
                        type: boolean
                min_purchase_value:
                  description: "The minimum limit of the virtual currency."
                  type: number
                max_purchase_value:
                  description: "The maximum limit of the virtual currency."
                  type: number
                sell_count_type:
                  description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
                  type: string
            vat_payer:
              description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
              type: string
            redirect_settings:
              type: object
              properties:
                mode:
                  description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                  type: string
                delay:
                  description: "The delay before the customer's redirection to the return URL. Default value is 0."
                  type: integer
                usage:
                  description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                  type: string
                button_caption:
                  description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                  type: string
            webhook_testing:
              type: object
              properties:
                products:
                  type: object
                  properties:
                    non_existing_user:
                      description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                      type: boolean
                    existing_user:
                      description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                      type: boolean
                    correct_payment:
                      description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                      type: boolean
                    incorrect_payment:
                      description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                      type: boolean
                virtual_currency:
                  type: object
                  properties:
                    non_existing_user:
                      description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                      type: boolean
                    existing_user:
                      description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                      type: boolean
                    correct_payment:
                      description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                      type: boolean
                    incorrect_payment:
                      description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                      type: boolean
                keys:
                  type: object
                  properties:
                    is_passed:
                      description: "Has a true value if the webhook's test case for the key has passed."
                      type: boolean
            webhook_mode:
              description: "The webhooks mode. Available values: default, pre_approval."
              type: string
    GetProductResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        item:
          type: object
          required:
          - project_id
          - object
          - type
          - sku
          - default_currency
          - pricing
          - billing_type
          properties:
            id:
              description: "The unique identifier for the product."
              type: string
            project_id:
              description: "The unique identifier for the product's project."
              type: string
            object:
              description: "The system constant that contains the returned object's type. Const value: product."
              type: string
            type:
              description: "The product's type."
              type: string
            sku:
              description: "The SKU of the product."
              type: string
            default_currency:
              description: "The product's default currency."
              type: string
            enabled:
              description: "Has a true value if the product is enabled."
              type: boolean
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The product's price region."
                    type: string
                  is_virtual_currency:
                    description: "Has a true value if the product's amount in the virtual currency."
                    type: boolean
            images:
              description: "The product's images URL list."
              type: array
              items:
                type: string
            url:
              description: "The product's URL in the merchant project."
              type: string
            pricing:
              description: "The pricing mode. Available values: currency, manual, steam, default."
              type: string
            billing_type:
              description: "The billing type. Available values: real, virtual."
              type: string
    CreatePageReviewRequest:
      type: object
      required:
      - review
      - url
      properties:
        review:
          description: "The feedback message."
          type: string
        url:
          description: "The feedback page URL."
          type: string
    CountriesList:
      type: object
      properties:
        countries:
          type: array
          items:
            properties:
              iso_code_a2:
                description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
                type: string
              region:
                description: "A PaySuper system's relative geographical area for this country."
                type: string
              currency:
                description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              payments_allowed:
                description: "Has a true value if a payment is allowed from this country."
                type: boolean
              change_allowed:
                description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
                type: boolean
              vat_enabled:
                description: "Has a true value if VAT is calculated and paid for this country."
                type: boolean
              vat_currency:
                description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              price_group_id:
                description: "The unique identifier for the price group this country belongs to."
                type: string
              vat_threshold:
                type: object
                properties:
                  year:
                    description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
                    type: number
                  world:
                    description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
                    type: number
              vat_period_month:
                description: "The length of the taxation period in months."
                type: integer
              vat_deadline_days:
                description: "The number of days after the taxation period end to pay VAT."
                type: integer
              vat_store_years:
                description: "The number of years to store the VAT payment history for this country."
                type: integer
              vat_currency_rates_policy:
                description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
                type: string
              vat_currency_rates_source:
                description: "The source of currency rates to calculate the tax amount."
                type: string
              payer_tariff_region:
                description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              high_risk_payments_allowed:
                description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
                type: boolean
              high_risk_change_allowed:
                description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
                type: boolean
    SetMerchantOperatingCompanyRequest:
      type: object
      properties:
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
        dont_charge_vat:
          description: "Has a true value if the merchant doesn't pay VAT."
          type: boolean
    GetMerchantsForUserResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        merchants:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the merchant."
                type: string
              name:
                description: "The merchant's name."
                type: string
              role:
                description: "The user's role in the merchant."
                type: string
    ListOrdersPublicResponseItem:
      type: object
      properties:
        count:
          description: "The total number of found orders."
          type: integer
        items:
          type: array
          items:
            properties:
              uuid:
                description: "The unique identifier for the order."
                type: string
              total_payment_amount:
                description: "The total payment amount."
                type: number
              currency:
                description: "The currency of the payment. Three-letter currency code ISO 4217, in uppercase."
                type: string
              project:
                type: object
                properties:
                  id:
                    description: "The unique identifier for the project."
                    type: string
                  merchant_id:
                    description: "The unique identifier for the merchant."
                    type: string
                  url_success:
                    description: "The redirect URL for the successful payment."
                    type: string
                  url_fail:
                    description: "The redirect URL for the failed payment."
                    type: string
                  url_check_account:
                    description: "The default URL to send a request to the merchant project for the payment data verification."
                    type: string
                  url_process_payment:
                    description: "The default URL to send a notification request to the merchant project."
                    type: string
                  callback_protocol:
                    description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                    type: string
                  status:
                    description: "4 - the project is removed."
                    type: integer
                  redirect_settings:
                    type: object
                    properties:
                      mode:
                        description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                        type: string
                      delay:
                        description: "The delay before the customer's redirection to the return URL. Default value is 0."
                        type: integer
                      usage:
                        description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                        type: string
                      button_caption:
                        description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                        type: string
              transaction:
                description: "The unique identifier for the order in the payment system."
                type: string
              payment_method:
                type: object
                properties:
                  title:
                    description: "The payment method's name."
                    type: string
                  external_id:
                    description: "The unique identifier for the payment method in the payment system."
                    type: string
                  payment_system_id:
                    description: "The unique identifier for the payment system in PaySuper."
                    type: string
                  type:
                    description: "The payment method's group alias."
                    type: string
                  saved:
                    description: "Has a true value if contains a saved card as a payment method."
                    type: boolean
                  card:
                    type: object
                    properties:
                      first6:
                        description: "The first 6 digits of the card number."
                        type: string
                      last4:
                        description: "The last 4 digits of the card number."
                        type: string
                      masked:
                        description: "The mask for a customer’s card number."
                        type: string
                      expiry_month:
                        description: "The validity month of the card."
                        type: string
                      expiry_year:
                        description: "The validity year of the card."
                        type: string
                      brand:
                        description: "The brand of the card issuer."
                        type: string
                      fingerprint:
                        description: "The internal fingerprint for given card."
                        type: string
                      secure3d:
                        description: "Has a true value if 3D-secure is used for the payment."
                        type: boolean
                  wallet:
                    type: object
                    properties:
                      brand:
                        description: "The name of the wallet."
                        type: string
                      account:
                        description: "The customer identity in the wallet."
                        type: string
                  crypto_currency:
                    type: object
                    properties:
                      brand:
                        description: "The name of the crypto currency."
                        type: string
                      address:
                        description: "The customer’s address in the crypto currency."
                        type: string
                  handler:
                    description: "The unique identifier for handler of the payment system in PaySuper."
                    type: string
                  refund_allowed:
                    description: "Has a true value if the payment method allows a refund."
                    type: boolean
              country_code:
                description: "Two-letter country code in ISO 3166-1, in uppercase."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              locale:
                description: "The customer’s locale name. Four-letter language code in ISO 639, for instance en-US."
                type: string
              status:
                description: "The current status of the order. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
                type: string
              user:
                type: object
                properties:
                  external_id:
                    description: "The unique identifier for the customer in the merchant project."
                    type: string
                  name:
                    description: "The customer's name."
                    type: string
                  email:
                    description: "The customer's email address."
                    type: string
                  email_verified:
                    description: "Whether the customer's email address has been verified on the merchant side."
                    type: boolean
                  phone:
                    description: "The customer's phone number."
                    type: string
                  phone_verified:
                    description: "Whether the customer's phone number has been verified on the merchant side."
                    type: boolean
                  ip:
                    description: "The customer's IP address."
                    type: string
                  locale:
                    description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                    type: string
                  address:
                    type: object
                    properties:
                      country:
                        description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      city:
                        description: "The customer’s city."
                        type: string
                      postal_code:
                        description: "The customer's postal code."
                        type: string
                      state:
                        description: "The customer's state code in ISO 3166-2."
                        type: string
              billing_address:
                type: object
                properties:
                  country:
                    description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  city:
                    description: "The customer’s city."
                    type: string
                  postal_code:
                    description: "The customer's postal code."
                    type: string
                  state:
                    description: "The customer's state code in ISO 3166-2."
                    type: string
              type:
                description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency, the simple checkout). Available values: key, product, virtual_currency, simple."
                type: string
              is_vat_deduction:
                description: "Has a true value if VAT can be deducted."
                type: boolean
              gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_fixed_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              net_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              merchant_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_reverse_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              issuer:
                type: object
                properties:
                  url:
                    description: "The referrer URL."
                    type: string
                  embedded:
                    description: "Has a true value if the form is embedded."
                    type: boolean
                  reference:
                    description: "The unique identifier for the reference."
                    type: string
                  reference_type:
                    description: "The reference type."
                    type: string
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
                  referrer_host:
                    description: "The referrer's host."
                    type: string
              items:
                type: array
                items:
                  required:
                  - id
                  - object
                  - sku
                  - name
                  - description
                  - amount
                  - currency
                  properties:
                    id:
                      description: "The unique identifier for the item."
                      type: string
                    object:
                      description: "String representing the item’s type."
                      type: string
                    sku:
                      description: "The SKU of the product."
                      type: string
                    name:
                      description: "The item's name."
                      type: string
                    description:
                      description: "The item's description."
                      type: string
                    amount:
                      description: "The item's price."
                      type: number
                    currency:
                      description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    images:
                      description: "The item's images URL list."
                      type: array
                      items:
                        type: string
                    url:
                      description: "The item's URL in the merchant project."
                      type: string
                    platform_id:
                      description: "The unique identifier for the platform."
                      type: string
                    code:
                      description: "The activation code."
                      type: string
              merchant_payout_currency:
                description: "The merchant's payout currency."
                type: string
              parent_order:
                type: object
                properties:
                  id:
                    description: "The internal unique identifier for the order in PaySuper."
                    type: string
                  uuid:
                    description: "The public unique identifier for the order in PaySuper."
                    type: string
              refund:
                type: object
                properties:
                  amount:
                    description: "The refund amount."
                    type: number
                  currency:
                    description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
                    type: string
                  code:
                    description: "The internal identity for the refund reason in PaySuper."
                    type: string
                  receipt_number:
                    description: "The unique identifier for the refund's receipt."
                    type: string
                  receipt_url:
                    description: "The URL in PaySuper service for online access to the refund's receipt."
                    type: string
              cancellation:
                type: object
                properties:
                  code:
                    description: "The internal identity for the cancellation reason in PaySuper."
                    type: string
                  reason:
                    description: "The cancellation reason."
                    type: string
              operating_company_id:
                description: "The unique identifier for the merchant's operating company."
                type: string
              refund_allowed:
                description: "Has a true value if the refund is allowed."
                type: boolean
              order_charge:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_ip_country:
                description: "The customer's country code by the customer's IP address."
                type: string
              is_ip_country_mismatch_bin:
                description: "Has a true value if the country from the card's BIN has not been matched to the country defined by the IP address (for card payments only)."
                type: boolean
              billing_country_changed_by_user:
                description: "Has a true value if the country was selected by the customer."
                type: boolean
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              is_production:
                description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
                type: boolean
              merchant_info:
                type: object
                properties:
                  company_name:
                    description: "The merchant's company name."
                    type: string
                  agreement_number:
                    description: "The merchant's license agreement number."
                    type: string
    CheckInviteTokenResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role_id:
          description: "The unique identifier for the role."
          type: string
        role_type:
          description: "The type of the invitation. Available values: admin, merchant."
          type: string
    CheckSkuAndKeyProjectRequest:
      type: object
      properties:
        sku:
          description: "The SKU of the project's product."
          type: string
    CommonUserProfile:
      type: object
      properties:
        profile:
          type: object
          properties:
            id:
              description: "The unique identifier for the PaySuper user."
              type: string
            email:
              type: object
              required:
              - email
              properties:
                email:
                  description: "The user's email address."
                  type: string
                confirmed:
                  description: "Whether the user's email address has been verified."
                  type: boolean
            personal:
              type: object
              required:
              - first_name
              - last_name
              - position
              properties:
                first_name:
                  description: "The user's first name."
                  type: string
                last_name:
                  description: "The user's last name."
                  type: string
                position:
                  description: "The user's position in the company."
                  type: string
            help:
              type: object
              properties:
                product_promotion_and_development:
                  description: "Has a true value if the user needs help with product promotion and development."
                  type: boolean
                released_game_promotion:
                  description: "Has a true value if the user needs help with games promotion that have already been released."
                  type: boolean
                international_sales:
                  description: "Has a true value if the user needs help with international sales."
                  type: boolean
                other:
                  description: "Has a true value if the user needs help with other problems."
                  type: boolean
            company:
              type: object
              required:
              - company_name
              - website
              properties:
                company_name:
                  description: "The company's name."
                  type: string
                website:
                  description: "The company's website."
                  type: string
                annual_income:
                  type: object
                  properties:
                    from:
                      description: "The lower boundary value of the range."
                      type: integer
                    to:
                      description: "The upper boundary value of the range."
                      type: integer
                number_of_employees:
                  type: object
                  properties:
                    from:
                      description: "The lower boundary value of the range."
                      type: integer
                    to:
                      description: "The upper boundary value of the range."
                      type: integer
                kind_of_activity:
                  description: "The company's kind of activity. Available values: develop_and_publish_your_games, publish_games_of_other_companies, publish_your_games_through_other_publishers, other."
                  type: string
                monetization:
                  type: object
                  properties:
                    paid_subscription:
                      description: "Has a true value if the monetization strategy is buying the paid subscription by company's users."
                      type: boolean
                    in_game_advertising:
                      description: "Has a true value if the monetization strategy is buying the in-game advertising."
                      type: boolean
                    in_game_purchases:
                      description: "Has a true value if the monetization strategy is buying in-game purchases by company's users."
                      type: boolean
                    premium_access:
                      description: "Has a true value if the monetization strategy is buying the premium access by company's users."
                      type: boolean
                    other:
                      description: "Has a true value if the monetization has the other strategy."
                      type: boolean
                platforms:
                  type: object
                  properties:
                    pc_mac:
                      description: "Has a true value if the platform is PC/MacOs."
                      type: boolean
                    game_console:
                      description: "Has a true value if the platform is the game console."
                      type: boolean
                    mobile_device:
                      description: "Has a true value if the platform is the mobile device."
                      type: boolean
                    web_browser:
                      description: "Has a true value if the platform is the web browser."
                      type: boolean
                    other:
                      description: "Has a true value if the platform has the other value."
                      type: boolean
            last_step:
              description: "The identifier for the last step of the wizard that the user need to finish."
              type: string
            centrifugo_token:
              description: "The user authorisation token to connect to the Centrifugo channel."
              type: string
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
        permissions:
          type: array
          items:
            properties:
              name:
                description: "The permission's name that stored in the Casbin server."
                type: string
              access:
                description: "The URL that is accessable by this permission."
                type: string
        merchant:
          type: object
          required:
          - payout_cost_currency
          - item_min_cost_currency
          properties:
            id:
              description: "The unique identifier for the merchant."
              type: string
            user:
              type: object
              required:
              - id
              - email
              properties:
                id:
                  description: "The unique identifier for the merchant's owner."
                  type: string
                email:
                  description: "The merchant's owner email address."
                  type: string
                first_name:
                  description: "The merchant's owner first name."
                  type: string
                last_name:
                  description: "The merchant's owner last name."
                  type: string
                profile_id:
                  description: "The primary onboarding profile identifier for the merchant's owner."
                  type: string
            company:
              type: object
              required:
              - name
              - alternative_name
              - website
              - country
              - zip
              - registration_number
              properties:
                name:
                  description: "The merchant's company name."
                  type: string
                alternative_name:
                  description: "The merchant's company alternative name."
                  type: string
                website:
                  description: "The merchant's company website."
                  type: string
                country:
                  description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                state:
                  description: "The merchant's company state."
                  type: string
                zip:
                  description: "The merchant's company ZIP code."
                  type: string
                city:
                  description: "The merchant's company city."
                  type: string
                address:
                  description: "The merchant's company address."
                  type: string
                address_additional:
                  description: "The merchant's company additional address."
                  type: string
                registration_number:
                  description: "The merchant's company registration number."
                  type: string
                tax_id:
                  description: "The merchant's company tax number."
                  type: string
            contacts:
              type: object
              properties:
                authorized:
                  type: object
                  required:
                  - name
                  - email
                  - phone
                  properties:
                    name:
                      description: "The authorised person's full name."
                      type: string
                    email:
                      description: "The authorised person's email address."
                      type: string
                    phone:
                      description: "The authorised person's phone."
                      type: string
                    position:
                      description: "The authorised person's position in the company."
                      type: string
                technical:
                  type: object
                  required:
                  - name
                  - email
                  - phone
                  properties:
                    name:
                      description: "The technical person's full name."
                      type: string
                    email:
                      description: "The technical person's email address."
                      type: string
                    phone:
                      description: "The technical person's phone."
                      type: string
            banking:
              type: object
              required:
              - currency
              - name
              - address
              - account_number
              - swift
              properties:
                currency:
                  description: "The merchant's bank account currency."
                  type: string
                name:
                  description: "The merchant's bank name."
                  type: string
                address:
                  description: "The merchant's bank address."
                  type: string
                account_number:
                  description: "The merchant's bank account number."
                  type: string
                swift:
                  description: "The merchant's bank SWIFT code."
                  type: string
                details:
                  description: "Additional details about the merchant's bank account."
                  type: string
                correspondent_account:
                  description: "The merchant's bank's correspondent account number."
                  type: string
                processing_default_currency:
                  description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
                  type: string
            status:
              description: "8 - The merchant has passed the onboarding and is waiting the agreement to be signed."
              type: integer
            has_merchant_signature:
              description: "Has a true value if the merchant has signed the license agreement."
              type: boolean
            has_psp_signature:
              description: "Has a true value if PaySuper has signed the license agreement."
              type: boolean
            is_signed:
              description: "Has a true value if the license agreement is completely signed."
              type: boolean
            payout_cost_amount:
              description: "The payout cost."
              type: number
            payout_cost_currency:
              description: "The currency of the payout cost."
              type: string
            min_payout_amount:
              description: "The minimum payout amount."
              type: number
            rolling_reserve_amount:
              description: "The rolling reserve threshold."
              type: number
            rolling_reserve_days:
              description: "The rolling reserve period."
              type: integer
            rolling_reserve_chargeback_transactions_threshold:
              description: "The rolling reserve threshold for the chargeback transactions."
              type: number
            item_min_cost_amount:
              description: "The minimum cost of the item."
              type: number
            item_min_cost_currency:
              description: "The currency of the minimum cost of the item."
              type: string
            centrifugo_token:
              description: "The merchant authorisation token to connect to the Centrifugo channel."
              type: string
            agreement_template:
              description: "The unique identifier for the HelloSign template of the license agreement."
              type: string
            has_projects:
              description: "Has a true value if the merchant has created projects."
              type: boolean
            agreement_number:
              description: "The license agreement number."
              type: string
            minimal_payout_limit:
              description: "The minimum payout limit."
              type: number
            tariff:
              type: object
              properties:
                payment:
                  type: array
                  items:
                    properties:
                      min_amount:
                        description: "The minimum payment amount."
                        type: number
                      max_amount:
                        description: "The maximum payment amount."
                        type: number
                      method_name:
                        description: "The payment method's name."
                        type: string
                      method_percent_fee:
                        description: "The fee of the payment method in percent."
                        type: number
                      method_fixed_fee:
                        description: "The fixed fee of the payment method in the particular currency."
                        type: number
                      method_fixed_fee_currency:
                        description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                        type: string
                      ps_percent_fee:
                        description: "The PaySuper fee in percent."
                        type: number
                      ps_fixed_fee:
                        description: "The PaySuper fixed fee in a particular currency."
                        type: number
                      ps_fixed_fee_currency:
                        description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                        type: string
                      merchant_home_region:
                        description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                        type: string
                      payer_region:
                        description: "The customer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                        type: string
                      mcc_code:
                        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                        type: string
                      is_active:
                        description: "Has a true value if the payment method is active."
                        type: boolean
                payout:
                  type: object
                  properties:
                    method_name:
                      description: "The method's name."
                      type: string
                    method_percent_fee:
                      description: "The fee of the method in percent."
                      type: number
                    method_fixed_fee:
                      description: "The fixed fee of the method in the particular currency."
                      type: number
                    method_fixed_fee_currency:
                      description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                      type: string
                    is_paid_by_merchant:
                      description: "Has a true value if the method is paid by the merchant."
                      type: boolean
                home_region:
                  description: "The merchant's region name."
                  type: string
                chargeback:
                  type: array
                  items:
                    properties:
                      method_name:
                        description: "The method's name."
                        type: string
                      method_percent_fee:
                        description: "The fee of the method in percent."
                        type: number
                      method_fixed_fee:
                        description: "The fixed fee of the method in the particular currency."
                        type: number
                      method_fixed_fee_currency:
                        description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                        type: string
                      is_paid_by_merchant:
                        description: "Has a true value if the method is paid by the merchant."
                        type: boolean
            manual_payouts_enabled:
              description: "Has a true value if the merchant can manually make a payout."
              type: boolean
            mcc_code:
              description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
              type: string
            operating_company_id:
              description: "The unique identifier for the operating company."
              type: string
            merchant_operations_type:
              description: "The merchant's operations type. Available values: low-risk, high-risk."
              type: string
            dont_charge_vat:
              description: "Has a true value if the merchant doesn't pay any taxes."
              type: boolean
    ListProductsResponse:
      type: object
      properties:
        limit:
          description: "The number of products returned in one page."
          type: integer
        offset:
          description: "The ranking number of the first item on the page."
          type: integer
        count:
          description: "The total number of found items."
          type: integer
        items:
          type: array
          items:
            required:
            - project_id
            - object
            - type
            - sku
            - default_currency
            - pricing
            - billing_type
            properties:
              id:
                description: "The unique identifier for the product."
                type: string
              project_id:
                description: "The unique identifier for the product's project."
                type: string
              object:
                description: "The system constant that contains the returned object's type. Const value: product."
                type: string
              type:
                description: "The product's type."
                type: string
              sku:
                description: "The SKU of the product."
                type: string
              default_currency:
                description: "The product's default currency."
                type: string
              enabled:
                description: "Has a true value if the product is enabled."
                type: boolean
              prices:
                type: array
                items:
                  properties:
                    amount:
                      description: "The product's price."
                      type: number
                    currency:
                      description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The product's price region."
                      type: string
                    is_virtual_currency:
                      description: "Has a true value if the product's amount in the virtual currency."
                      type: boolean
              images:
                description: "The product's images URL list."
                type: array
                items:
                  type: string
              url:
                description: "The product's URL in the merchant project."
                type: string
              pricing:
                description: "The pricing mode. Available values: currency, manual, steam, default."
                type: string
              billing_type:
                description: "The billing type. Available values: real, virtual."
                type: string
    ListProjectsResponse:
      type: object
      properties:
        count:
          description: "The total number of found projects."
          type: integer
        items:
          type: array
          items:
            required:
            - merchant_id
            properties:
              id:
                description: "The unique identifier for the project."
                type: string
              merchant_id:
                description: "The unique identifier for the project's merchant."
                type: string
              callback_protocol:
                description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                type: string
              limits_currency:
                description: "The currency of the limit amount."
                type: string
              min_payment_amount:
                description: "The minimum order amount."
                type: number
              max_payment_amount:
                description: "The maximum order amount."
                type: number
              secret_key:
                description: "The project's secret key for sign notification requests"
                type: string
              url_process_payment:
                description: "The URL configured on the merchant project to get webhooks from PaySuper."
                type: string
              url_redirect_fail:
                description: "The default URL to redirect a customer after the failed payment."
                type: string
              url_redirect_success:
                description: "The default URL to redirect a customer after the successful payment."
                type: string
              status:
                description: "4 - the project is removed."
                type: integer
              products_count:
                description: "The number of products in the project."
                type: integer
              localizations:
                description: "The list of languages for the project's and its products descriptions localization."
                type: array
                items:
                  type: string
              currencies:
                type: array
                items:
                  properties:
                    currency:
                      description: "Three-letter currency code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The region of the price."
                      type: string
              cover:
                type: object
                properties:
                  images:
                    type: object
                    properties:
                      en:
                        description: "The URL for EN localization."
                        type: string
                      ru:
                        description: "The URL for RU localization."
                        type: string
                      es:
                        description: "The URL for ES localization."
                        type: string
                      de:
                        description: "The URL for DE localization."
                        type: string
                      zh:
                        description: "The URL for ZH localization."
                        type: string
                      fr:
                        description: "The URL for FR localization."
                        type: string
                      ar:
                        description: "The URL for AR localization."
                        type: string
                      pt:
                        description: "The URL for PT localization."
                        type: string
                      it:
                        description: "The URL for IT localization."
                        type: string
                      pl:
                        description: "The URL for PL localization."
                        type: string
                      el:
                        description: "The URL for EL localization."
                        type: string
                      ko:
                        description: "The URL for KO localization."
                        type: string
                      ja:
                        description: "The URL for JA localization."
                        type: string
                      vl:
                        description: "The URL for VL localization."
                        type: string
                      he:
                        description: "The URL for HE localization."
                        type: string
                      th:
                        description: "The URL for TH localization."
                        type: string
                      cs:
                        description: "The URL for CS localization."
                        type: string
                      bg:
                        description: "The URL for BG localization."
                        type: string
                      fi:
                        description: "The URL for FI localization."
                        type: string
                      sv:
                        description: "The URL for SV localization."
                        type: string
                      da:
                        description: "The URL for DA localization."
                        type: string
                      tr:
                        description: "The URL for TR localization."
                        type: string
                  use_one_for_all:
                    description: "Has a true value if the single cover is used for all localizations."
                    type: boolean
              virtual_currency:
                type: object
                properties:
                  logo:
                    description: "The logo URL for the virtual currency."
                    type: string
                  prices:
                    type: array
                    items:
                      properties:
                        amount:
                          description: "The product's price."
                          type: number
                        currency:
                          description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                          type: string
                        region:
                          description: "The product's price region."
                          type: string
                        is_virtual_currency:
                          description: "Has a true value if the product's amount in the virtual currency."
                          type: boolean
                  min_purchase_value:
                    description: "The minimum limit of the virtual currency."
                    type: number
                  max_purchase_value:
                    description: "The maximum limit of the virtual currency."
                    type: number
                  sell_count_type:
                    description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
                    type: string
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              redirect_settings:
                type: object
                properties:
                  mode:
                    description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                    type: string
                  delay:
                    description: "The delay before the customer's redirection to the return URL. Default value is 0."
                    type: integer
                  usage:
                    description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                    type: string
                  button_caption:
                    description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                    type: string
              webhook_testing:
                type: object
                properties:
                  products:
                    type: object
                    properties:
                      non_existing_user:
                        description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                        type: boolean
                      existing_user:
                        description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                        type: boolean
                      correct_payment:
                        description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                        type: boolean
                      incorrect_payment:
                        description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                        type: boolean
                  virtual_currency:
                    type: object
                    properties:
                      non_existing_user:
                        description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                        type: boolean
                      existing_user:
                        description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                        type: boolean
                      correct_payment:
                        description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                        type: boolean
                      incorrect_payment:
                        description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                        type: boolean
                  keys:
                    type: object
                    properties:
                      is_passed:
                        description: "Has a true value if the webhook's test case for the key has passed."
                        type: boolean
              webhook_mode:
                description: "The webhooks mode. Available values: default, pre_approval."
                type: string
    UpdateVatReportStatusRequest:
      type: object
      properties:
        status:
          description: "The VAT report status. Available values: paid, canceled."
          type: string
    PaymentChannelCostMerchantList:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the record about the merchant's tariffs."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              name:
                description: "The payment method's name."
                type: string
              payout_currency:
                description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              min_amount:
                description: "The minimum payment amount."
                type: number
              region:
                description: "The customer's region."
                type: string
              country:
                description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              method_percent:
                description: "The fee of the payment method in percent."
                type: number
              method_fix_amount:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              method_fix_amount_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              ps_percent:
                description: "The PaySuper fee in percent."
                type: number
              ps_fixed_fee:
                description: "The PaySuper fixed fee in a particular currency."
                type: number
              ps_fixed_fee_currency:
                description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              is_active:
                description: "Has a true value if the rates record is active for the merchant."
                type: boolean
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
    PriceGroupCurrenciesResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            properties:
              currency:
                description: "The region's currency."
                type: string
              regions:
                type: array
                items:
                  properties:
                    region:
                      description: "The region's name."
                      type: string
                    country:
                      description: "The country's name."
                      type: array
                      items:
                        type: string
    DashboardMainReport:
      type: object
      properties:
        gross_revenue:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current period."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous period."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        vat:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current period."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous period."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        total_transactions:
          type: object
          properties:
            count_current:
              description: "The total amount calculated for the current period."
              type: integer
            count_previous:
              description: "The total amount calculated for the previous period."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
        arpu:
          type: object
          properties:
            amount_current:
              description: "The total amount calculated for the current period."
              type: number
            amount_previous:
              description: "The total amount calculated for the previous period."
              type: number
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: number
    PayoutDocumentsPaginate:
      type: object
      properties:
        count:
          description: "The total number of the payout documents."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the payout document."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant who is the owner of the payout document."
                type: string
              source_id:
                description: "The list of the unique identifiers for the royalty reports."
                type: array
                items:
                  type: string
              total_fees:
                description: "The total amount of fees."
                type: number
              balance:
                description: "The payout amount."
                type: number
              currency:
                description: "The payout amount currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              total_transactions:
                description: "The total number of transactions."
                type: integer
              description:
                description: "The additional description of the payout."
                type: string
              destination:
                type: object
                required:
                - currency
                - name
                - address
                - account_number
                - swift
                properties:
                  currency:
                    description: "The merchant's bank account currency."
                    type: string
                  name:
                    description: "The merchant's bank name."
                    type: string
                  address:
                    description: "The merchant's bank address."
                    type: string
                  account_number:
                    description: "The merchant's bank account number."
                    type: string
                  swift:
                    description: "The merchant's bank SWIFT code."
                    type: string
                  details:
                    description: "Additional details about the merchant's bank account."
                    type: string
                  correspondent_account:
                    description: "The merchant's bank's correspondent account number."
                    type: string
                  processing_default_currency:
                    description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
                    type: string
              merchant_agreement_number:
                description: "The merchant's license agreement number."
                type: string
              company:
                type: object
                required:
                - name
                - alternative_name
                - website
                - country
                - zip
                - registration_number
                properties:
                  name:
                    description: "The merchant's company name."
                    type: string
                  alternative_name:
                    description: "The merchant's company alternative name."
                    type: string
                  website:
                    description: "The merchant's company website."
                    type: string
                  country:
                    description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  state:
                    description: "The merchant's company state."
                    type: string
                  zip:
                    description: "The merchant's company ZIP code."
                    type: string
                  city:
                    description: "The merchant's company city."
                    type: string
                  address:
                    description: "The merchant's company address."
                    type: string
                  address_additional:
                    description: "The merchant's company additional address."
                    type: string
                  registration_number:
                    description: "The merchant's company registration number."
                    type: string
                  tax_id:
                    description: "The merchant's company tax number."
                    type: string
              status:
                description: "The document status. Available values: skip, pending, in_progress, paid, canceled, failed."
                type: string
              transaction:
                description: "The unique identifier for the payout transaction."
                type: string
              failure_code:
                description: "The payout's failure code. Available values: account_closed, account_frozen, account_restricted, destination_bank_invalid, could_not_process, declined, insufficient_funds, invalid_account_number, incorrect_account_holder_name, invalid_currency."
                type: string
              failure_message:
                description: "The payout's failure message."
                type: string
              failure_transaction:
                description: "The unique identifier for the payout failure transaction."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
    GetMerchantOnboardingCompleteDataResponseItem:
      type: object
      properties:
        status:
          description: "The filling out status. Available values: draft, life."
          type: string
        steps:
          type: object
          properties:
            company:
              description: "Has a true value if the company data is filled out."
              type: boolean
            contacts:
              description: "Has a true value if the contacts data is filled out."
              type: boolean
            banking:
              description: "Has a true value if the banking data is filled out."
              type: boolean
            tariff:
              description: "Has a true value if the tariff data is filled out."
              type: boolean
        complete_steps_count:
          description: "The number of steps completed."
          type: integer
    PaymentMethodParams:
      type: object
      properties:
        currency:
          description: "The currency of the payment method. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
        brand:
          description: "The list of the card issuer brands."
          type: array
          items:
            type: string
    Country:
      type: object
      properties:
        iso_code_a2:
          description: "Two-letter country code in ISO 3166, in uppercase (for instance US)."
          type: string
        region:
          description: "A PaySuper system's relative geographical area for this country."
          type: string
        currency:
          description: "The currency of the country. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        payments_allowed:
          description: "Has a true value if a payment is allowed from this country."
          type: boolean
        change_allowed:
          description: "Has a true value if the customer can select another country in case of the payments are disallowed for this country."
          type: boolean
        vat_enabled:
          description: "Has a true value if VAT is calculated and paid for this country."
          type: boolean
        vat_currency:
          description: "VAT currency. It can differ from the country currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        price_group_id:
          description: "The unique identifier for the price group this country belongs to."
          type: string
        vat_threshold:
          type: object
          properties:
            year:
              description: "The maximum value of the PaySuper's revenue (since the beginning of the year) from this country which subjects to VAT."
              type: number
            world:
              description: "The maximum value of the PaySuper's worldwide revenue (since the beginning of the year) which subjects to VAT."
              type: number
        vat_period_month:
          description: "The length of the taxation period in months."
          type: integer
        vat_deadline_days:
          description: "The number of days after the taxation period end to pay VAT."
          type: integer
        vat_store_years:
          description: "The number of years to store the VAT payment history for this country."
          type: integer
        vat_currency_rates_policy:
          description: "The VAT calculation policy with a currency that differs from this country's VAT currency. Available values: on-day (the conversion rate on the day of payment), last-day (the conversion rate on the last day of a tax period), mid-month (the system reserved option of a conversion rate calculation. This option is disabled.)."
          type: string
        vat_currency_rates_source:
          description: "The source of currency rates to calculate the tax amount."
          type: string
        payer_tariff_region:
          description: "A PaySuper system's relative geographical area for this country. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
          type: string
        high_risk_payments_allowed:
          description: "Has a true value if payments from this country are allowed. Has a false value for a high-risk merchant."
          type: boolean
        high_risk_change_allowed:
          description: "Has a true value if the customer can select another country while the payments are disallowed for a country determined by their IP address."
          type: boolean
    RoyaltyReportsPaginate:
      type: object
      properties:
        count:
          description: "The total number of reports."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the royalty report."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              status:
                description: "The document status. Available values: skip, pending, in_progress, paid, canceled, failed."
                type: string
              totals:
                type: object
                properties:
                  transactions_count:
                    description: "The total transactions."
                    type: integer
                  fee_amount:
                    description: "The amount of fees."
                    type: number
                  vat_amount:
                    description: "The amount of VAT."
                    type: number
                  payout_amount:
                    description: "The payout amount."
                    type: number
                  rolling_reserve_amount:
                    description: "The rolling reserve amount."
                    type: number
                  correction_amount:
                    description: "The corrections amount."
                    type: number
              currency:
                description: "The currency of the royalty report. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              summary:
                type: object
                properties:
                  products_items:
                    type: array
                    items:
                      properties:
                        product:
                          description: "The name of the product or project."
                          type: string
                        region:
                          description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                          type: string
                        total_transactions:
                          description: "The total number of transactions for the current product or project in the current country (including sales and returns)."
                          type: integer
                        sales_count:
                          description: "The number of sales for the current product or project in the current country."
                          type: integer
                        gross_sales_amount:
                          description: "The gross amount of sales for current product or project in the current country."
                          type: number
                        returns_count:
                          description: "The number of returns for current product or project in the current country."
                          type: integer
                        gross_returns_amount:
                          description: "The gross amount of returns for current product or project in the current country."
                          type: number
                        gross_total_amount:
                          description: "The total gross amount (sales minus returns) for current product or project in the current country."
                          type: number
                        total_fees:
                          description: "The amount of fees for current product or project in the current country."
                          type: number
                        total_vat:
                          description: "The amount of VAT for current product or project in the current country."
                          type: number
                        payout_amount:
                          description: "The payout amount for current product or project in the current country."
                          type: number
                  products_total:
                    type: object
                    properties:
                      product:
                        description: "The name of the product or project."
                        type: string
                      region:
                        description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      total_transactions:
                        description: "The total number of transactions for the current product or project in the current country (including sales and returns)."
                        type: integer
                      sales_count:
                        description: "The number of sales for the current product or project in the current country."
                        type: integer
                      gross_sales_amount:
                        description: "The gross amount of sales for current product or project in the current country."
                        type: number
                      returns_count:
                        description: "The number of returns for current product or project in the current country."
                        type: integer
                      gross_returns_amount:
                        description: "The gross amount of returns for current product or project in the current country."
                        type: number
                      gross_total_amount:
                        description: "The total gross amount (sales minus returns) for current product or project in the current country."
                        type: number
                      total_fees:
                        description: "The amount of fees for current product or project in the current country."
                        type: number
                      total_vat:
                        description: "The amount of VAT for current product or project in the current country."
                        type: number
                      payout_amount:
                        description: "The payout amount for current product or project in the current country."
                        type: number
                  corrections:
                    type: array
                    items:
                      properties:
                        accounting_entry_id:
                          description: "The unique identifier for the linked accounting entry."
                          type: string
                        amount:
                          description: "The amount of the correction."
                          type: number
                        currency:
                          description: "The currency of the correction. Three-letter Currency Code ISO 4217, in uppercase."
                          type: string
                        reason:
                          description: "The correction reason."
                          type: string
                  rolling_reserves:
                    type: array
                    items:
                      properties:
                        accounting_entry_id:
                          description: "The unique identifier for the linked accounting entry."
                          type: string
                        amount:
                          description: "The amount of the correction."
                          type: number
                        currency:
                          description: "The currency of the correction. Three-letter Currency Code ISO 4217, in uppercase."
                          type: string
                        reason:
                          description: "The correction reason."
                          type: string
              dispute_reason:
                description: "The dispute reason (if any)."
                type: string
              is_auto_accepted:
                description: "Has a true value if the royalty report is auto-accepted."
                type: boolean
              payout_document_id:
                description: "The unique identifier for the payout document."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
    Project:
      type: object
      required:
      - merchant_id
      properties:
        id:
          description: "The unique identifier for the project."
          type: string
        merchant_id:
          description: "The unique identifier for the project's merchant."
          type: string
        callback_protocol:
          description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
          type: string
        limits_currency:
          description: "The currency of the limit amount."
          type: string
        min_payment_amount:
          description: "The minimum order amount."
          type: number
        max_payment_amount:
          description: "The maximum order amount."
          type: number
        secret_key:
          description: "The project's secret key for sign notification requests"
          type: string
        url_process_payment:
          description: "The URL configured on the merchant project to get webhooks from PaySuper."
          type: string
        url_redirect_fail:
          description: "The default URL to redirect a customer after the failed payment."
          type: string
        url_redirect_success:
          description: "The default URL to redirect a customer after the successful payment."
          type: string
        status:
          description: "4 - the project is removed."
          type: integer
        products_count:
          description: "The number of products in the project."
          type: integer
        localizations:
          description: "The list of languages for the project's and its products descriptions localization."
          type: array
          items:
            type: string
        currencies:
          type: array
          items:
            properties:
              currency:
                description: "Three-letter currency code ISO 4217, in uppercase."
                type: string
              region:
                description: "The region of the price."
                type: string
        cover:
          type: object
          properties:
            images:
              type: object
              properties:
                en:
                  description: "The URL for EN localization."
                  type: string
                ru:
                  description: "The URL for RU localization."
                  type: string
                es:
                  description: "The URL for ES localization."
                  type: string
                de:
                  description: "The URL for DE localization."
                  type: string
                zh:
                  description: "The URL for ZH localization."
                  type: string
                fr:
                  description: "The URL for FR localization."
                  type: string
                ar:
                  description: "The URL for AR localization."
                  type: string
                pt:
                  description: "The URL for PT localization."
                  type: string
                it:
                  description: "The URL for IT localization."
                  type: string
                pl:
                  description: "The URL for PL localization."
                  type: string
                el:
                  description: "The URL for EL localization."
                  type: string
                ko:
                  description: "The URL for KO localization."
                  type: string
                ja:
                  description: "The URL for JA localization."
                  type: string
                vl:
                  description: "The URL for VL localization."
                  type: string
                he:
                  description: "The URL for HE localization."
                  type: string
                th:
                  description: "The URL for TH localization."
                  type: string
                cs:
                  description: "The URL for CS localization."
                  type: string
                bg:
                  description: "The URL for BG localization."
                  type: string
                fi:
                  description: "The URL for FI localization."
                  type: string
                sv:
                  description: "The URL for SV localization."
                  type: string
                da:
                  description: "The URL for DA localization."
                  type: string
                tr:
                  description: "The URL for TR localization."
                  type: string
            use_one_for_all:
              description: "Has a true value if the single cover is used for all localizations."
              type: boolean
        virtual_currency:
          type: object
          properties:
            logo:
              description: "The logo URL for the virtual currency."
              type: string
            prices:
              type: array
              items:
                properties:
                  amount:
                    description: "The product's price."
                    type: number
                  currency:
                    description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  region:
                    description: "The product's price region."
                    type: string
                  is_virtual_currency:
                    description: "Has a true value if the product's amount in the virtual currency."
                    type: boolean
            min_purchase_value:
              description: "The minimum limit of the virtual currency."
              type: number
            max_purchase_value:
              description: "The maximum limit of the virtual currency."
              type: number
            sell_count_type:
              description: "The number representation of the virtual currency amount. Available values: fractional (for example: 1,58), integral (1, 2, 5 etc)."
              type: string
        vat_payer:
          description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
          type: string
        redirect_settings:
          type: object
          properties:
            mode:
              description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
              type: string
            delay:
              description: "The delay before the customer's redirection to the return URL. Default value is 0."
              type: integer
            usage:
              description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
              type: string
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
        webhook_testing:
          type: object
          properties:
            products:
              type: object
              properties:
                non_existing_user:
                  description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                  type: boolean
                existing_user:
                  description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                  type: boolean
                correct_payment:
                  description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                  type: boolean
                incorrect_payment:
                  description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                  type: boolean
            virtual_currency:
              type: object
              properties:
                non_existing_user:
                  description: "Has a true value if the webhook's test case for the user that does not exist in the merchant's storage has passed."
                  type: boolean
                existing_user:
                  description: "Has a true value if the webhook's test case for the user that exists in the merchant's storage has passed."
                  type: boolean
                correct_payment:
                  description: "Has a true value if the webhook's test case for the correctly completed payment has passed."
                  type: boolean
                incorrect_payment:
                  description: "Has a true value if the webhook's test case for the incorrectly completed payment has passed."
                  type: boolean
            keys:
              type: object
              properties:
                is_passed:
                  description: "Has a true value if the webhook's test case for the key has passed."
                  type: boolean
        webhook_mode:
          description: "The webhooks mode. Available values: default, pre_approval."
          type: string
    RecommendedPriceResponse:
      type: object
      properties:
        recommended_price:
          type: array
          items:
            properties:
              region:
                description: "The region's name."
                type: string
              currency:
                description: "Three-letter currency code in ISO 4217, in uppercase."
                type: string
              amount:
                description: "The recommended currency conversion price."
                type: number
    ProductPricesResponse:
      type: object
      properties:
        product_price:
          type: array
          items:
            properties:
              amount:
                description: "The product's price."
                type: number
              currency:
                description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              region:
                description: "The product's price region."
                type: string
              is_virtual_currency:
                description: "Has a true value if the product's amount in the virtual currency."
                type: boolean
    Notifications:
      type: object
      properties:
        count:
          description: "The total number of found notifications."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the notification."
                type: string
              message:
                description: "The notification message."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant who is the recipient of the notification."
                type: string
              user_id:
                description: "The unique identifier for the user who is the sender of the notification."
                type: string
              is_system:
                description: "Has a true value if the notification is generated automatically."
                type: boolean
              is_read:
                description: "Has a true value if the recipient has read the notification."
                type: boolean
              statuses:
                type: object
                properties:
                  from:
                    description: "The before changes status."
                    type: integer
                  to:
                    description: "The after changes status."
                    type: integer
    CreatePaylinkRequest:
      type: object
      required:
      - products
      - merchant_id
      - project_id
      - name
      - products_type
      properties:
        id:
          description: "The unique identifier for the payment link."
          type: string
        expires_at:
          description: "The date of the payment link expiration."
          type: integer
        products:
          description: "The list of the payment link's products."
          type: array
          items:
            type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        project_id:
          description: "The unique identifier for the project."
          type: string
        name:
          description: "The payment link's name."
          type: string
        no_expiry_date:
          description: "Has a true value if the payment link has no expiry date."
          type: boolean
        products_type:
          description: "The type of products. Available values: product, key."
          type: string
    TransactionsPaginate:
      type: object
      properties:
        count:
          description: "The total number of found transactions."
          type: integer
        items:
          type: array
          items:
            properties:
              uuid:
                description: "The unique identifier for the order."
                type: string
              total_payment_amount:
                description: "The total payment amount."
                type: number
              currency:
                description: "The currency of the payment. Three-letter currency code ISO 4217, in uppercase."
                type: string
              project:
                type: object
                properties:
                  id:
                    description: "The unique identifier for the project."
                    type: string
                  merchant_id:
                    description: "The unique identifier for the merchant."
                    type: string
                  url_success:
                    description: "The redirect URL for the successful payment."
                    type: string
                  url_fail:
                    description: "The redirect URL for the failed payment."
                    type: string
                  url_check_account:
                    description: "The default URL to send a request to the merchant project for the payment data verification."
                    type: string
                  url_process_payment:
                    description: "The default URL to send a notification request to the merchant project."
                    type: string
                  callback_protocol:
                    description: "The protocol of the payment notification. Available values: default - the webhook protocol that is set in the Project notification settings, empty - the webhook is not sent and the payment is immediately marked as successful in the PaySuper system."
                    type: string
                  status:
                    description: "4 - the project is removed."
                    type: integer
                  redirect_settings:
                    type: object
                    properties:
                      mode:
                        description: "The mode to redirect the customer from the payment form after the payment. Available values: disable, successful, fail, any."
                        type: string
                      delay:
                        description: "The delay before the customer's redirection to the return URL. Default value is 0."
                        type: integer
                      usage:
                        description: "The redirection feature could be used in different representations of the payment form. Default value is any. Available values: standalone, iframe, embed, any."
                        type: string
                      button_caption:
                        description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
                        type: string
              transaction:
                description: "The unique identifier for the order in the payment system."
                type: string
              payment_method:
                type: object
                properties:
                  title:
                    description: "The payment method's name."
                    type: string
                  external_id:
                    description: "The unique identifier for the payment method in the payment system."
                    type: string
                  payment_system_id:
                    description: "The unique identifier for the payment system in PaySuper."
                    type: string
                  type:
                    description: "The payment method's group alias."
                    type: string
                  saved:
                    description: "Has a true value if contains a saved card as a payment method."
                    type: boolean
                  card:
                    type: object
                    properties:
                      first6:
                        description: "The first 6 digits of the card number."
                        type: string
                      last4:
                        description: "The last 4 digits of the card number."
                        type: string
                      masked:
                        description: "The mask for a customer’s card number."
                        type: string
                      expiry_month:
                        description: "The validity month of the card."
                        type: string
                      expiry_year:
                        description: "The validity year of the card."
                        type: string
                      brand:
                        description: "The brand of the card issuer."
                        type: string
                      fingerprint:
                        description: "The internal fingerprint for given card."
                        type: string
                      secure3d:
                        description: "Has a true value if 3D-secure is used for the payment."
                        type: boolean
                  wallet:
                    type: object
                    properties:
                      brand:
                        description: "The name of the wallet."
                        type: string
                      account:
                        description: "The customer identity in the wallet."
                        type: string
                  crypto_currency:
                    type: object
                    properties:
                      brand:
                        description: "The name of the crypto currency."
                        type: string
                      address:
                        description: "The customer’s address in the crypto currency."
                        type: string
                  handler:
                    description: "The unique identifier for handler of the payment system in PaySuper."
                    type: string
                  refund_allowed:
                    description: "Has a true value if the payment method allows a refund."
                    type: boolean
              country_code:
                description: "Two-letter country code in ISO 3166-1, in uppercase."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              locale:
                description: "The customer’s locale name. Four-letter language code in ISO 639, for instance en-US."
                type: string
              status:
                description: "The current status of the order. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
                type: string
              user:
                type: object
                properties:
                  external_id:
                    description: "The unique identifier for the customer in the merchant project."
                    type: string
                  name:
                    description: "The customer's name."
                    type: string
                  email:
                    description: "The customer's email address."
                    type: string
                  email_verified:
                    description: "Whether the customer's email address has been verified on the merchant side."
                    type: boolean
                  phone:
                    description: "The customer's phone number."
                    type: string
                  phone_verified:
                    description: "Whether the customer's phone number has been verified on the merchant side."
                    type: boolean
                  ip:
                    description: "The customer's IP address."
                    type: string
                  locale:
                    description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
                    type: string
                  address:
                    type: object
                    properties:
                      country:
                        description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                        type: string
                      city:
                        description: "The customer’s city."
                        type: string
                      postal_code:
                        description: "The customer's postal code."
                        type: string
                      state:
                        description: "The customer's state code in ISO 3166-2."
                        type: string
              billing_address:
                type: object
                properties:
                  country:
                    description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  city:
                    description: "The customer’s city."
                    type: string
                  postal_code:
                    description: "The customer's postal code."
                    type: string
                  state:
                    description: "The customer's state code in ISO 3166-2."
                    type: string
              type:
                description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency, the simple checkout). Available values: key, product, virtual_currency, simple."
                type: string
              is_vat_deduction:
                description: "Has a true value if VAT can be deducted."
                type: boolean
              gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              tax_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_fixed_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              net_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_gross_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              method_refund_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              merchant_refund_fixed_fee_tariff:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              paysuper_refund_tax_fee_currency_exchange_fee:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_reverse_revenue:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              refund_fees_total_local:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              issuer:
                type: object
                properties:
                  url:
                    description: "The referrer URL."
                    type: string
                  embedded:
                    description: "Has a true value if the form is embedded."
                    type: boolean
                  reference:
                    description: "The unique identifier for the reference."
                    type: string
                  reference_type:
                    description: "The reference type."
                    type: string
                  utm_source:
                    description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
                    type: string
                  utm_medium:
                    description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
                    type: string
                  utm_campaign:
                    description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
                    type: string
                  referrer_host:
                    description: "The referrer's host."
                    type: string
              items:
                type: array
                items:
                  required:
                  - id
                  - object
                  - sku
                  - name
                  - description
                  - amount
                  - currency
                  properties:
                    id:
                      description: "The unique identifier for the item."
                      type: string
                    object:
                      description: "String representing the item’s type."
                      type: string
                    sku:
                      description: "The SKU of the product."
                      type: string
                    name:
                      description: "The item's name."
                      type: string
                    description:
                      description: "The item's description."
                      type: string
                    amount:
                      description: "The item's price."
                      type: number
                    currency:
                      description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    images:
                      description: "The item's images URL list."
                      type: array
                      items:
                        type: string
                    url:
                      description: "The item's URL in the merchant project."
                      type: string
                    platform_id:
                      description: "The unique identifier for the platform."
                      type: string
                    code:
                      description: "The activation code."
                      type: string
              merchant_payout_currency:
                description: "The merchant's payout currency."
                type: string
              parent_order:
                type: object
                properties:
                  id:
                    description: "The internal unique identifier for the order in PaySuper."
                    type: string
                  uuid:
                    description: "The public unique identifier for the order in PaySuper."
                    type: string
              refund:
                type: object
                properties:
                  amount:
                    description: "The refund amount."
                    type: number
                  currency:
                    description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
                    type: string
                  code:
                    description: "The internal identity for the refund reason in PaySuper."
                    type: string
                  receipt_number:
                    description: "The unique identifier for the refund's receipt."
                    type: string
                  receipt_url:
                    description: "The URL in PaySuper service for online access to the refund's receipt."
                    type: string
              cancellation:
                type: object
                properties:
                  code:
                    description: "The internal identity for the cancellation reason in PaySuper."
                    type: string
                  reason:
                    description: "The cancellation reason."
                    type: string
              operating_company_id:
                description: "The unique identifier for the merchant's operating company."
                type: string
              refund_allowed:
                description: "Has a true value if the refund is allowed."
                type: boolean
              order_charge:
                type: object
                properties:
                  amount:
                    description: "The amount value."
                    type: number
                  currency:
                    description: "The amount currency. Three-letter currency code in ISO 4217, in uppercase."
                    type: string
              payment_ip_country:
                description: "The customer's country code by the customer's IP address."
                type: string
              is_ip_country_mismatch_bin:
                description: "Has a true value if the country from the card's BIN has not been matched to the country defined by the IP address (for card payments only)."
                type: boolean
              billing_country_changed_by_user:
                description: "Has a true value if the country was selected by the customer."
                type: boolean
              vat_payer:
                description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
                type: string
              is_production:
                description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
                type: boolean
              merchant_info:
                type: object
                properties:
                  company_name:
                    description: "The merchant's company name."
                    type: string
                  agreement_number:
                    description: "The merchant's license agreement number."
                    type: string
    DashboardBaseReports:
      type: object
      properties:
        revenue_by_country:
          type: object
          properties:
            currency:
              description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            top:
              type: array
              items:
                properties:
                  country:
                    description: "The country's name."
                    type: string
                  amount:
                    description: "The revenue amount for this country."
                    type: number
            total_current:
              description: "The total revenue amount for the specified period."
              type: number
            total_previous:
              description: "The total revenue amount for the previous period."
              type: number
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  amount:
                    description: "The amount by country."
                    type: number
        sales_today:
          type: object
          properties:
            top:
              type: array
              items:
                properties:
                  name:
                    description: "The name of the sold item (product or project)."
                    type: string
                  count:
                    description: "The total number of items (products or projects) which were sold for the specified period."
                    type: integer
            total_current:
              description: "The total number of items (products or projects) which were sold for the specified period."
              type: integer
            total_previous:
              description: "The total number of items (products or projects) which were sold for the previous period."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: integer
        sources:
          type: object
          properties:
            top:
              type: array
              items:
                properties:
                  name:
                    description: "The name of the sold item (product or project)."
                    type: string
                  count:
                    description: "The total number of items (products or projects) which were sold for the specified period."
                    type: integer
            total_current:
              description: "The total number of transactions for the specified period."
              type: integer
            total_previous:
              description: "The total number of transactions for the previous period."
              type: integer
            chart:
              type: array
              items:
                properties:
                  label:
                    description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                    type: integer
                  value:
                    description: "The point value."
                    type: integer
    MerchantListingResponse:
      type: object
      properties:
        count:
          description: "The total number of the merchants."
          type: integer
        items:
          type: array
          items:
            required:
            - payout_cost_currency
            - item_min_cost_currency
            properties:
              id:
                description: "The unique identifier for the merchant."
                type: string
              user:
                type: object
                required:
                - id
                - email
                properties:
                  id:
                    description: "The unique identifier for the merchant's owner."
                    type: string
                  email:
                    description: "The merchant's owner email address."
                    type: string
                  first_name:
                    description: "The merchant's owner first name."
                    type: string
                  last_name:
                    description: "The merchant's owner last name."
                    type: string
                  profile_id:
                    description: "The primary onboarding profile identifier for the merchant's owner."
                    type: string
              company:
                type: object
                required:
                - name
                - alternative_name
                - website
                - country
                - zip
                - registration_number
                properties:
                  name:
                    description: "The merchant's company name."
                    type: string
                  alternative_name:
                    description: "The merchant's company alternative name."
                    type: string
                  website:
                    description: "The merchant's company website."
                    type: string
                  country:
                    description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  state:
                    description: "The merchant's company state."
                    type: string
                  zip:
                    description: "The merchant's company ZIP code."
                    type: string
                  city:
                    description: "The merchant's company city."
                    type: string
                  address:
                    description: "The merchant's company address."
                    type: string
                  address_additional:
                    description: "The merchant's company additional address."
                    type: string
                  registration_number:
                    description: "The merchant's company registration number."
                    type: string
                  tax_id:
                    description: "The merchant's company tax number."
                    type: string
              contacts:
                type: object
                properties:
                  authorized:
                    type: object
                    required:
                    - name
                    - email
                    - phone
                    properties:
                      name:
                        description: "The authorised person's full name."
                        type: string
                      email:
                        description: "The authorised person's email address."
                        type: string
                      phone:
                        description: "The authorised person's phone."
                        type: string
                      position:
                        description: "The authorised person's position in the company."
                        type: string
                  technical:
                    type: object
                    required:
                    - name
                    - email
                    - phone
                    properties:
                      name:
                        description: "The technical person's full name."
                        type: string
                      email:
                        description: "The technical person's email address."
                        type: string
                      phone:
                        description: "The technical person's phone."
                        type: string
              banking:
                type: object
                required:
                - currency
                - name
                - address
                - account_number
                - swift
                properties:
                  currency:
                    description: "The merchant's bank account currency."
                    type: string
                  name:
                    description: "The merchant's bank name."
                    type: string
                  address:
                    description: "The merchant's bank address."
                    type: string
                  account_number:
                    description: "The merchant's bank account number."
                    type: string
                  swift:
                    description: "The merchant's bank SWIFT code."
                    type: string
                  details:
                    description: "Additional details about the merchant's bank account."
                    type: string
                  correspondent_account:
                    description: "The merchant's bank's correspondent account number."
                    type: string
                  processing_default_currency:
                    description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
                    type: string
              status:
                description: "8 - The merchant has passed the onboarding and is waiting the agreement to be signed."
                type: integer
              has_merchant_signature:
                description: "Has a true value if the merchant has signed the license agreement."
                type: boolean
              has_psp_signature:
                description: "Has a true value if PaySuper has signed the license agreement."
                type: boolean
              is_signed:
                description: "Has a true value if the license agreement is completely signed."
                type: boolean
              payout_cost_amount:
                description: "The payout cost."
                type: number
              payout_cost_currency:
                description: "The currency of the payout cost."
                type: string
              min_payout_amount:
                description: "The minimum payout amount."
                type: number
              rolling_reserve_amount:
                description: "The rolling reserve threshold."
                type: number
              rolling_reserve_days:
                description: "The rolling reserve period."
                type: integer
              rolling_reserve_chargeback_transactions_threshold:
                description: "The rolling reserve threshold for the chargeback transactions."
                type: number
              item_min_cost_amount:
                description: "The minimum cost of the item."
                type: number
              item_min_cost_currency:
                description: "The currency of the minimum cost of the item."
                type: string
              centrifugo_token:
                description: "The merchant authorisation token to connect to the Centrifugo channel."
                type: string
              agreement_template:
                description: "The unique identifier for the HelloSign template of the license agreement."
                type: string
              has_projects:
                description: "Has a true value if the merchant has created projects."
                type: boolean
              agreement_number:
                description: "The license agreement number."
                type: string
              minimal_payout_limit:
                description: "The minimum payout limit."
                type: number
              tariff:
                type: object
                properties:
                  payment:
                    type: array
                    items:
                      properties:
                        min_amount:
                          description: "The minimum payment amount."
                          type: number
                        max_amount:
                          description: "The maximum payment amount."
                          type: number
                        method_name:
                          description: "The payment method's name."
                          type: string
                        method_percent_fee:
                          description: "The fee of the payment method in percent."
                          type: number
                        method_fixed_fee:
                          description: "The fixed fee of the payment method in the particular currency."
                          type: number
                        method_fixed_fee_currency:
                          description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                          type: string
                        ps_percent_fee:
                          description: "The PaySuper fee in percent."
                          type: number
                        ps_fixed_fee:
                          description: "The PaySuper fixed fee in a particular currency."
                          type: number
                        ps_fixed_fee_currency:
                          description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                          type: string
                        merchant_home_region:
                          description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                          type: string
                        payer_region:
                          description: "The customer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                          type: string
                        mcc_code:
                          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                          type: string
                        is_active:
                          description: "Has a true value if the payment method is active."
                          type: boolean
                  payout:
                    type: object
                    properties:
                      method_name:
                        description: "The method's name."
                        type: string
                      method_percent_fee:
                        description: "The fee of the method in percent."
                        type: number
                      method_fixed_fee:
                        description: "The fixed fee of the method in the particular currency."
                        type: number
                      method_fixed_fee_currency:
                        description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                        type: string
                      is_paid_by_merchant:
                        description: "Has a true value if the method is paid by the merchant."
                        type: boolean
                  home_region:
                    description: "The merchant's region name."
                    type: string
                  chargeback:
                    type: array
                    items:
                      properties:
                        method_name:
                          description: "The method's name."
                          type: string
                        method_percent_fee:
                          description: "The fee of the method in percent."
                          type: number
                        method_fixed_fee:
                          description: "The fixed fee of the method in the particular currency."
                          type: number
                        method_fixed_fee_currency:
                          description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                          type: string
                        is_paid_by_merchant:
                          description: "Has a true value if the method is paid by the merchant."
                          type: boolean
              manual_payouts_enabled:
                description: "Has a true value if the merchant can manually make a payout."
                type: boolean
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
              merchant_operations_type:
                description: "The merchant's operations type. Available values: low-risk, high-risk."
                type: string
              dont_charge_vat:
                description: "Has a true value if the merchant doesn't pay any taxes."
                type: boolean
    RoyaltyReport:
      type: object
      properties:
        id:
          description: "The unique identifier for the royalty report."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        status:
          description: "The document status. Available values: skip, pending, in_progress, paid, canceled, failed."
          type: string
        totals:
          type: object
          properties:
            transactions_count:
              description: "The total transactions."
              type: integer
            fee_amount:
              description: "The amount of fees."
              type: number
            vat_amount:
              description: "The amount of VAT."
              type: number
            payout_amount:
              description: "The payout amount."
              type: number
            rolling_reserve_amount:
              description: "The rolling reserve amount."
              type: number
            correction_amount:
              description: "The corrections amount."
              type: number
        currency:
          description: "The currency of the royalty report. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        summary:
          type: object
          properties:
            products_items:
              type: array
              items:
                properties:
                  product:
                    description: "The name of the product or project."
                    type: string
                  region:
                    description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                    type: string
                  total_transactions:
                    description: "The total number of transactions for the current product or project in the current country (including sales and returns)."
                    type: integer
                  sales_count:
                    description: "The number of sales for the current product or project in the current country."
                    type: integer
                  gross_sales_amount:
                    description: "The gross amount of sales for current product or project in the current country."
                    type: number
                  returns_count:
                    description: "The number of returns for current product or project in the current country."
                    type: integer
                  gross_returns_amount:
                    description: "The gross amount of returns for current product or project in the current country."
                    type: number
                  gross_total_amount:
                    description: "The total gross amount (sales minus returns) for current product or project in the current country."
                    type: number
                  total_fees:
                    description: "The amount of fees for current product or project in the current country."
                    type: number
                  total_vat:
                    description: "The amount of VAT for current product or project in the current country."
                    type: number
                  payout_amount:
                    description: "The payout amount for current product or project in the current country."
                    type: number
            products_total:
              type: object
              properties:
                product:
                  description: "The name of the product or project."
                  type: string
                region:
                  description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                total_transactions:
                  description: "The total number of transactions for the current product or project in the current country (including sales and returns)."
                  type: integer
                sales_count:
                  description: "The number of sales for the current product or project in the current country."
                  type: integer
                gross_sales_amount:
                  description: "The gross amount of sales for current product or project in the current country."
                  type: number
                returns_count:
                  description: "The number of returns for current product or project in the current country."
                  type: integer
                gross_returns_amount:
                  description: "The gross amount of returns for current product or project in the current country."
                  type: number
                gross_total_amount:
                  description: "The total gross amount (sales minus returns) for current product or project in the current country."
                  type: number
                total_fees:
                  description: "The amount of fees for current product or project in the current country."
                  type: number
                total_vat:
                  description: "The amount of VAT for current product or project in the current country."
                  type: number
                payout_amount:
                  description: "The payout amount for current product or project in the current country."
                  type: number
            corrections:
              type: array
              items:
                properties:
                  accounting_entry_id:
                    description: "The unique identifier for the linked accounting entry."
                    type: string
                  amount:
                    description: "The amount of the correction."
                    type: number
                  currency:
                    description: "The currency of the correction. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The correction reason."
                    type: string
            rolling_reserves:
              type: array
              items:
                properties:
                  accounting_entry_id:
                    description: "The unique identifier for the linked accounting entry."
                    type: string
                  amount:
                    description: "The amount of the correction."
                    type: number
                  currency:
                    description: "The currency of the correction. Three-letter Currency Code ISO 4217, in uppercase."
                    type: string
                  reason:
                    description: "The correction reason."
                    type: string
        dispute_reason:
          description: "The dispute reason (if any)."
          type: string
        is_auto_accepted:
          description: "Has a true value if the royalty report is auto-accepted."
          type: boolean
        payout_document_id:
          description: "The unique identifier for the payout document."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
    InviteUserAdminResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
    PlatformKeysFileResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        keys_processed:
          description: "The number of the processed keys."
          type: integer
        total_count:
          description: "The total number of keys."
          type: integer
    CreatePayoutDocumentRequest:
      type: object
      required:
      - merchant_id
      - ip
      properties:
        description:
          description: "The description of the payout document."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        ip:
          description: "The IP address of the user which created the payout document."
          type: string
    Product:
      type: object
      required:
      - project_id
      - object
      - type
      - sku
      - default_currency
      - pricing
      - billing_type
      properties:
        id:
          description: "The unique identifier for the product."
          type: string
        project_id:
          description: "The unique identifier for the product's project."
          type: string
        object:
          description: "The system constant that contains the returned object's type. Const value: product."
          type: string
        type:
          description: "The product's type."
          type: string
        sku:
          description: "The SKU of the product."
          type: string
        default_currency:
          description: "The product's default currency."
          type: string
        enabled:
          description: "Has a true value if the product is enabled."
          type: boolean
        prices:
          type: array
          items:
            properties:
              amount:
                description: "The product's price."
                type: number
              currency:
                description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              region:
                description: "The product's price region."
                type: string
              is_virtual_currency:
                description: "Has a true value if the product's amount in the virtual currency."
                type: boolean
        images:
          description: "The product's images URL list."
          type: array
          items:
            type: string
        url:
          description: "The product's URL in the merchant project."
          type: string
        pricing:
          description: "The pricing mode. Available values: currency, manual, steam, default."
          type: string
        billing_type:
          description: "The billing type. Available values: real, virtual."
          type: string
    MerchantReviewRoyaltyReportRequest:
      type: object
      properties:
        dispute_reason:
          description: "The dispute reason."
          type: string
    SendWebhookToMerchantResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        order_id:
          description: "The unique identifier for the order."
          type: string
    DashboardRevenueDynamicReport:
      type: object
      properties:
        currency:
          description: "The current report amount currency. Three-letter currency code ISO 4217, in uppercase."
          type: string
        items:
          type: array
          items:
            properties:
              label:
                description: "The point label. For example, if the period of the report equals to month then the point label will be equal to one day."
                type: integer
              amount:
                description: "The revenue amount."
                type: number
              count:
                description: "The total number of transactions."
                type: integer
    ResendInviteMerchantRequest:
      type: object
      required:
      - merchant_id
      - email
      properties:
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        email:
          description: "The user's email address."
          type: string
    PaymentMethod:
      type: object
      properties:
        id:
          description: "The unique identifier for the payment method."
          type: string
        name:
          description: "The payment method's name."
          type: string
        group_alias:
          description: "The payment method's group alias."
          type: string
        external_id:
          description: "The unique identifier for the payment method in the payment system."
          type: string
        min_payment_amount:
          description: "The minimum payment amount."
          type: number
        max_payment_amount:
          description: "The maximum payment amount."
          type: number
        type:
          description: "The payment method's type. Available values: bank_card, ewallet, crypto."
          type: string
        account_regexp:
          description: "The regexp mask for checking the main requisite of the payment method."
          type: string
        is_active:
          description: "Has a true value if the payment method is active."
          type: boolean
        payment_system_id:
          description: "The unique identifier for the payment method in PaySuper."
          type: string
        refund_allowed:
          description: "Has a true value if the payment method allows a refund."
          type: boolean
    ResponseErrorMessage:
      type: object
      properties:
        code:
          description: "The error code."
          type: string
        message:
          description: "The error short description."
          type: string
        details:
          description: "The error details."
          type: string
    Order:
      type: object
      properties:
        id:
          description: "The public unique identifier for the order in PaySuper."
          type: string
        transaction:
          description: "The unique identifier for the order in the payment system."
          type: string
        object:
          description: "The system constant that contains the returned object's type."
          type: string
        status:
          description: "The current status of the order. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
          type: string
        description:
          description: "The order's description."
          type: string
        canceled:
          description: "Has a true value if the order is cancelled."
          type: boolean
        cancellation:
          type: object
          properties:
            code:
              description: "The internal identity for the cancellation reason in PaySuper."
              type: string
            reason:
              description: "The cancellation reason."
              type: string
        refunded:
          description: "Has a true value if the order is refunded."
          type: boolean
        receipt_email:
          description: "The customer's email that is used for the payment receipt."
          type: string
        receipt_phone:
          description: "The customer's phone who receives the payment receipt."
          type: string
        receipt_number:
          description: "The unique identifier for the order's receipt."
          type: string
        receipt_url:
          description: "The URL in PaySuper service for online access to the receipt."
          type: string
        agreement_version:
          description: "The license agreement version."
          type: string
        agreement_accepted:
          description: "Has a true value if the customer has accepted the license agreement."
          type: boolean
        notify_sale:
          description: "Has a true value if the customer has agreed to receive the sales notifications."
          type: boolean
        notify_sale_email:
          description: "The customer's email for the sales notifications."
          type: string
        issuer:
          type: object
          properties:
            url:
              description: "The referrer URL."
              type: string
            embedded:
              description: "Has a true value if the form is embedded."
              type: boolean
            reference:
              description: "The unique identifier for the reference."
              type: string
            reference_type:
              description: "The reference type."
              type: string
            utm_source:
              description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
              type: string
            utm_medium:
              description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
              type: string
            utm_campaign:
              description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
              type: string
            referrer_host:
              description: "The referrer's host."
              type: string
        amount:
          description: "The total payment amount including all commissions."
          type: number
        currency:
          description: "The order currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        user:
          type: object
          properties:
            external_id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            name:
              description: "The customer's name."
              type: string
            email:
              description: "The customer's email address."
              type: string
            email_verified:
              description: "Whether the customer's email address has been verified on the merchant side."
              type: boolean
            phone:
              description: "The customer's phone number."
              type: string
            phone_verified:
              description: "Whether the customer's phone number has been verified on the merchant side."
              type: boolean
            ip:
              description: "The customer's IP address."
              type: string
            locale:
              description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
              type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        billing_address:
          type: object
          properties:
            country:
              description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            city:
              description: "The customer’s city."
              type: string
            postal_code:
              description: "The customer's postal code."
              type: string
            state:
              description: "The customer's state code in ISO 3166-2."
              type: string
        tax:
          type: object
          properties:
            type:
              description: "The type of the tax."
              type: string
            rate:
              description: "The tax rate."
              type: number
            amount:
              description: "The tax amount."
              type: number
            currency:
              description: "The tax currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
        method:
          type: object
          properties:
            title:
              description: "The payment method's name."
              type: string
            external_id:
              description: "The unique identifier for the payment method in the payment system."
              type: string
            payment_system_id:
              description: "The unique identifier for the payment system in PaySuper."
              type: string
            type:
              description: "The payment method's group alias."
              type: string
            saved:
              description: "Has a true value if contains a saved card as a payment method."
              type: boolean
            card:
              type: object
              properties:
                first6:
                  description: "The first 6 digits of the card number."
                  type: string
                last4:
                  description: "The last 4 digits of the card number."
                  type: string
                masked:
                  description: "The mask for a customer’s card number."
                  type: string
                expiry_month:
                  description: "The validity month of the card."
                  type: string
                expiry_year:
                  description: "The validity year of the card."
                  type: string
                brand:
                  description: "The brand of the card issuer."
                  type: string
                fingerprint:
                  description: "The internal fingerprint for given card."
                  type: string
                secure3d:
                  description: "Has a true value if 3D-secure is used for the payment."
                  type: boolean
            wallet:
              type: object
              properties:
                brand:
                  description: "The name of the wallet."
                  type: string
                account:
                  description: "The customer identity in the wallet."
                  type: string
            crypto_currency:
              type: object
              properties:
                brand:
                  description: "The name of the crypto currency."
                  type: string
                address:
                  description: "The customer’s address in the crypto currency."
                  type: string
            handler:
              description: "The unique identifier for handler of the payment system in PaySuper."
              type: string
            refund_allowed:
              description: "Has a true value if the payment method allows a refund."
              type: boolean
        items:
          type: array
          items:
            required:
            - id
            - object
            - sku
            - name
            - description
            - amount
            - currency
            properties:
              id:
                description: "The unique identifier for the item."
                type: string
              object:
                description: "String representing the item’s type."
                type: string
              sku:
                description: "The SKU of the product."
                type: string
              name:
                description: "The item's name."
                type: string
              description:
                description: "The item's description."
                type: string
              amount:
                description: "The item's price."
                type: number
              currency:
                description: "The item's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              images:
                description: "The item's images URL list."
                type: array
                items:
                  type: string
              url:
                description: "The item's URL in the merchant project."
                type: string
              platform_id:
                description: "The unique identifier for the platform."
                type: string
              code:
                description: "The activation code."
                type: string
        refund:
          type: object
          properties:
            amount:
              description: "The refund amount."
              type: number
            currency:
              description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
              type: string
            reason:
              description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
              type: string
            code:
              description: "The internal identity for the refund reason in PaySuper."
              type: string
            receipt_number:
              description: "The unique identifier for the refund's receipt."
              type: string
            receipt_url:
              description: "The URL in PaySuper service for online access to the refund's receipt."
              type: string
        original_amount:
          description: "The order amount excluding commissions."
          type: number
        country:
          description: "The customer's country code. Two-letter country code in ISO 3166-1, in uppercase."
          type: string
        type:
          description: "The type of the order's product. Available values: simple, product, key, virtual_currency."
          type: string
        platform_id:
          description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
          type: string
        receipt_id:
          description: "The public unique identifier for the receipt."
          type: string
        virtual_currency_amount:
          description: "The amount in the project's virtual currency."
          type: number
        is_buy_for_virtual_currency:
          description: "Has a true value if the order amount was in the project's virtual currency."
          type: boolean
        charge_currency:
          description: "The currency of the order charge. It can differ from the order currency because it also depends on the customer's card currency."
          type: string
        charge_amount:
          description: "The total amount of the order charge."
          type: number
        vat_payer:
          description: "The responsible for VAT. Available values: buyer (VAT is added to the order charge), seller (VAT is included in the order charge), nobody (VAT exempt)."
          type: string
        is_production:
          description: "Has a true value for a production payment and false for a test payment that goes through a test sandbox."
          type: boolean
        testing_case:
          description: "The webhook testing mode. Available values: correct_payment, non_existing_user, existing_user, invalid_signature."
          type: string
        form_mode:
          description: "The opening mode of the payment form on the project side. Available values: embed, iframe, standalone. Default value: embed."
          type: string
        merchant_info:
          type: object
          properties:
            company_name:
              description: "The merchant's company name."
              type: string
            agreement_number:
              description: "The merchant's license agreement number."
              type: string
    PaymentMinLimitSystem:
      type: object
      required:
      - currency
      - amount
      properties:
        currency:
          description: "The system limit currency."
          type: string
        amount:
          description: "The system limit amount."
          type: number
    TaxRate:
      type: object
      properties:
        id:
          description: "The unique identifier for the tax rate."
          type: integer
        zip:
          description: "The ZIP code."
          type: string
        country:
          description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        city:
          description: "The city."
          type: string
        state:
          description: "The state code in ISO 3166-2."
          type: string
        rate:
          description: "The tax rate."
          type: number
    GetRoleListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the role."
                type: string
              name:
                description: "The role's name."
                type: string
    UserRoleResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        user_role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
    GetMerchantTariffRatesResponseItems:
      type: object
      properties:
        payment:
          type: array
          items:
            properties:
              min_amount:
                description: "The minimum payment amount."
                type: number
              max_amount:
                description: "The maximum payment amount."
                type: number
              method_name:
                description: "The payment method's name."
                type: string
              method_percent_fee:
                description: "The fee of the payment method in percent."
                type: number
              method_fixed_fee:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              method_fixed_fee_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              ps_percent_fee:
                description: "The PaySuper fee in percent."
                type: number
              ps_fixed_fee:
                description: "The PaySuper fixed fee in a particular currency."
                type: number
              ps_fixed_fee_currency:
                description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              merchant_home_region:
                description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              payer_region:
                description: "The customer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                type: string
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              is_active:
                description: "Has a true value if the payment method is active."
                type: boolean
        chargeback:
          type: array
          items:
            properties:
              method_name:
                description: "The method's name."
                type: string
              method_percent_fee:
                description: "The fee of the method in percent."
                type: number
              method_fixed_fee:
                description: "The fixed fee of the method in the particular currency."
                type: number
              method_fixed_fee_currency:
                description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              is_paid_by_merchant:
                description: "Has a true value if the method is paid by the merchant."
                type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
    CreateRefundRequest:
      type: object
      required:
      - amount
      properties:
        amount:
          description: "The refund amount."
          type: number
        creator_id:
          description: "The unique identifier for the user initiated an action on the return."
          type: string
        reason:
          description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
          type: string
        is_chargeback:
          description: "Has a true value if this refund is a chargeback."
          type: boolean
    StatCommon:
      type: object
      properties:
        paylink_id:
          description: "The unique identifier for the payment link."
          type: string
        visits:
          description: "The total number of visits."
          type: integer
        total_transactions:
          description: "The total number of transactions."
          type: integer
        sales_count:
          description: "The total number of sales."
          type: integer
        returns_count:
          description: "The total number of returns."
          type: integer
        gross_sales_amount:
          description: "The gross amount of sales."
          type: number
        gross_returns_amount:
          description: "The gross amount of returns."
          type: number
        gross_total_amount:
          description: "The gross revenue."
          type: number
        transactions_currency:
          description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
          type: string
        conversion:
          description: "The conversion - sales per visits relation."
          type: number
        country_code:
          description: "Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        date:
          description: "The date of the summary."
          type: string
        referrer_host:
          description: "The address of the webpage where the request originated."
          type: string
        utm:
          type: object
          properties:
            utm_source:
              description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
              type: string
            utm_medium:
              description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
              type: string
            utm_campaign:
              description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
              type: string
    NotificationRequest:
      type: object
      required:
      - title
      - message
      properties:
        title:
          description: "The notification title."
          type: string
        message:
          description: "The notification message."
          type: string
    Merchant:
      type: object
      required:
      - payout_cost_currency
      - item_min_cost_currency
      properties:
        id:
          description: "The unique identifier for the merchant."
          type: string
        user:
          type: object
          required:
          - id
          - email
          properties:
            id:
              description: "The unique identifier for the merchant's owner."
              type: string
            email:
              description: "The merchant's owner email address."
              type: string
            first_name:
              description: "The merchant's owner first name."
              type: string
            last_name:
              description: "The merchant's owner last name."
              type: string
            profile_id:
              description: "The primary onboarding profile identifier for the merchant's owner."
              type: string
        company:
          type: object
          required:
          - name
          - alternative_name
          - website
          - country
          - zip
          - registration_number
          properties:
            name:
              description: "The merchant's company name."
              type: string
            alternative_name:
              description: "The merchant's company alternative name."
              type: string
            website:
              description: "The merchant's company website."
              type: string
            country:
              description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            state:
              description: "The merchant's company state."
              type: string
            zip:
              description: "The merchant's company ZIP code."
              type: string
            city:
              description: "The merchant's company city."
              type: string
            address:
              description: "The merchant's company address."
              type: string
            address_additional:
              description: "The merchant's company additional address."
              type: string
            registration_number:
              description: "The merchant's company registration number."
              type: string
            tax_id:
              description: "The merchant's company tax number."
              type: string
        contacts:
          type: object
          properties:
            authorized:
              type: object
              required:
              - name
              - email
              - phone
              properties:
                name:
                  description: "The authorised person's full name."
                  type: string
                email:
                  description: "The authorised person's email address."
                  type: string
                phone:
                  description: "The authorised person's phone."
                  type: string
                position:
                  description: "The authorised person's position in the company."
                  type: string
            technical:
              type: object
              required:
              - name
              - email
              - phone
              properties:
                name:
                  description: "The technical person's full name."
                  type: string
                email:
                  description: "The technical person's email address."
                  type: string
                phone:
                  description: "The technical person's phone."
                  type: string
        banking:
          type: object
          required:
          - currency
          - name
          - address
          - account_number
          - swift
          properties:
            currency:
              description: "The merchant's bank account currency."
              type: string
            name:
              description: "The merchant's bank name."
              type: string
            address:
              description: "The merchant's bank address."
              type: string
            account_number:
              description: "The merchant's bank account number."
              type: string
            swift:
              description: "The merchant's bank SWIFT code."
              type: string
            details:
              description: "Additional details about the merchant's bank account."
              type: string
            correspondent_account:
              description: "The merchant's bank's correspondent account number."
              type: string
            processing_default_currency:
              description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
              type: string
        status:
          description: "8 - The merchant has passed the onboarding and is waiting the agreement to be signed."
          type: integer
        has_merchant_signature:
          description: "Has a true value if the merchant has signed the license agreement."
          type: boolean
        has_psp_signature:
          description: "Has a true value if PaySuper has signed the license agreement."
          type: boolean
        is_signed:
          description: "Has a true value if the license agreement is completely signed."
          type: boolean
        payout_cost_amount:
          description: "The payout cost."
          type: number
        payout_cost_currency:
          description: "The currency of the payout cost."
          type: string
        min_payout_amount:
          description: "The minimum payout amount."
          type: number
        rolling_reserve_amount:
          description: "The rolling reserve threshold."
          type: number
        rolling_reserve_days:
          description: "The rolling reserve period."
          type: integer
        rolling_reserve_chargeback_transactions_threshold:
          description: "The rolling reserve threshold for the chargeback transactions."
          type: number
        item_min_cost_amount:
          description: "The minimum cost of the item."
          type: number
        item_min_cost_currency:
          description: "The currency of the minimum cost of the item."
          type: string
        centrifugo_token:
          description: "The merchant authorisation token to connect to the Centrifugo channel."
          type: string
        agreement_template:
          description: "The unique identifier for the HelloSign template of the license agreement."
          type: string
        has_projects:
          description: "Has a true value if the merchant has created projects."
          type: boolean
        agreement_number:
          description: "The license agreement number."
          type: string
        minimal_payout_limit:
          description: "The minimum payout limit."
          type: number
        tariff:
          type: object
          properties:
            payment:
              type: array
              items:
                properties:
                  min_amount:
                    description: "The minimum payment amount."
                    type: number
                  max_amount:
                    description: "The maximum payment amount."
                    type: number
                  method_name:
                    description: "The payment method's name."
                    type: string
                  method_percent_fee:
                    description: "The fee of the payment method in percent."
                    type: number
                  method_fixed_fee:
                    description: "The fixed fee of the payment method in the particular currency."
                    type: number
                  method_fixed_fee_currency:
                    description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  ps_percent_fee:
                    description: "The PaySuper fee in percent."
                    type: number
                  ps_fixed_fee:
                    description: "The PaySuper fixed fee in a particular currency."
                    type: number
                  ps_fixed_fee_currency:
                    description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  merchant_home_region:
                    description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                    type: string
                  payer_region:
                    description: "The customer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
                    type: string
                  mcc_code:
                    description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                    type: string
                  is_active:
                    description: "Has a true value if the payment method is active."
                    type: boolean
            payout:
              type: object
              properties:
                method_name:
                  description: "The method's name."
                  type: string
                method_percent_fee:
                  description: "The fee of the method in percent."
                  type: number
                method_fixed_fee:
                  description: "The fixed fee of the method in the particular currency."
                  type: number
                method_fixed_fee_currency:
                  description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                  type: string
                is_paid_by_merchant:
                  description: "Has a true value if the method is paid by the merchant."
                  type: boolean
            home_region:
              description: "The merchant's region name."
              type: string
            chargeback:
              type: array
              items:
                properties:
                  method_name:
                    description: "The method's name."
                    type: string
                  method_percent_fee:
                    description: "The fee of the method in percent."
                    type: number
                  method_fixed_fee:
                    description: "The fixed fee of the method in the particular currency."
                    type: number
                  method_fixed_fee_currency:
                    description: "The currency of the fixed fee of the method. Three-letter currency code ISO 4217, in uppercase."
                    type: string
                  is_paid_by_merchant:
                    description: "Has a true value if the method is paid by the merchant."
                    type: boolean
        manual_payouts_enabled:
          description: "Has a true value if the merchant can manually make a payout."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
        merchant_operations_type:
          description: "The merchant's operations type. Available values: low-risk, high-risk."
          type: string
        dont_charge_vat:
          description: "Has a true value if the merchant doesn't pay any taxes."
          type: boolean
    PayoutDocument:
      type: object
      properties:
        id:
          description: "The unique identifier for the payout document."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant who is the owner of the payout document."
          type: string
        source_id:
          description: "The list of the unique identifiers for the royalty reports."
          type: array
          items:
            type: string
        total_fees:
          description: "The total amount of fees."
          type: number
        balance:
          description: "The payout amount."
          type: number
        currency:
          description: "The payout amount currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        total_transactions:
          description: "The total number of transactions."
          type: integer
        description:
          description: "The additional description of the payout."
          type: string
        destination:
          type: object
          required:
          - currency
          - name
          - address
          - account_number
          - swift
          properties:
            currency:
              description: "The merchant's bank account currency."
              type: string
            name:
              description: "The merchant's bank name."
              type: string
            address:
              description: "The merchant's bank address."
              type: string
            account_number:
              description: "The merchant's bank account number."
              type: string
            swift:
              description: "The merchant's bank SWIFT code."
              type: string
            details:
              description: "Additional details about the merchant's bank account."
              type: string
            correspondent_account:
              description: "The merchant's bank's correspondent account number."
              type: string
            processing_default_currency:
              description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
              type: string
        merchant_agreement_number:
          description: "The merchant's license agreement number."
          type: string
        company:
          type: object
          required:
          - name
          - alternative_name
          - website
          - country
          - zip
          - registration_number
          properties:
            name:
              description: "The merchant's company name."
              type: string
            alternative_name:
              description: "The merchant's company alternative name."
              type: string
            website:
              description: "The merchant's company website."
              type: string
            country:
              description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
              type: string
            state:
              description: "The merchant's company state."
              type: string
            zip:
              description: "The merchant's company ZIP code."
              type: string
            city:
              description: "The merchant's company city."
              type: string
            address:
              description: "The merchant's company address."
              type: string
            address_additional:
              description: "The merchant's company additional address."
              type: string
            registration_number:
              description: "The merchant's company registration number."
              type: string
            tax_id:
              description: "The merchant's company tax number."
              type: string
        status:
          description: "The document status. Available values: skip, pending, in_progress, paid, canceled, failed."
          type: string
        transaction:
          description: "The unique identifier for the payout transaction."
          type: string
        failure_code:
          description: "The payout's failure code. Available values: account_closed, account_frozen, account_restricted, destination_bank_invalid, could_not_process, declined, insufficient_funds, invalid_account_number, incorrect_account_holder_name, invalid_currency."
          type: string
        failure_message:
          description: "The payout's failure message."
          type: string
        failure_transaction:
          description: "The unique identifier for the payout failure transaction."
          type: string
        operating_company_id:
          description: "The unique identifier for the operating company."
          type: string
    ChangeRoyaltyReportRequest:
      type: object
      properties:
        merchant_id:
          description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"merchant_i\""
          type: string
        status:
          description: "The report status. Available values: pending, skipped, accepted, canceled, dispute, ready_for_invoice, payment_in_progress, payment_done, payment_error."
          type: string
        correction:
          type: object
          properties:
            amount:
              description: "The correction amount."
              type: number
            reason:
              description: "The correction reason."
              type: string
    InviteUserMerchantResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
    ChangeCodeInOrderRequest:
      type: object
      required:
      - key_product_id
      properties:
        key_product_id:
          description: "The unique identifier for the key-activated product."
          type: string
    MoneyBackCostMerchantList:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the record about the merchant's tariffs."
                type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              name:
                description: "The payment method's name."
                type: string
              payout_currency:
                description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              undo_reason:
                description: "The return reason. Available values: refund, reversal, chargeback."
                type: string
              region:
                description: "The customer's region."
                type: string
              country:
                description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              days_from:
                description: "The number of days after the payment operation."
                type: integer
              payment_stage:
                description: "The payment stage."
                type: integer
              percent:
                description: "The fee of the payment method in percent."
                type: number
              fix_amount:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              fix_amount_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              is_paid_by_merchant:
                description: "Has a true value if the commission was paid by the merchant."
                type: boolean
              is_active:
                description: "Has a true value if the rates record is active for the merchant."
                type: boolean
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
    EmptyResponseWithStatus:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
    Key:
      type: object
      properties:
        id:
          description: "The unique identifier for the key."
          type: string
        code:
          description: "The activation code."
          type: string
        key_product_id:
          description: "The unique identifier for the key's product."
          type: string
        platform_id:
          description: "The unique identifier for the platform. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
          type: string
        order_id:
          description: "The unique identifier for the order when redeeming the code (can be empty)."
          type: string
    GetOrderLogsResponse:
      type: object
      properties:
        create:
          type: array
          items:
            properties:
              uri:
                type: object
              request:
                type: object
                properties:
                  headers:
                    type: object
                  body:
                    type: object
              response:
                type: object
                properties:
                  http_status:
                    type: object
        callback:
          type: array
          items:
            properties:
              uri:
                type: object
              request:
                type: object
                properties:
                  headers:
                    type: object
                  body:
                    type: object
              response:
                type: object
                properties:
                  http_status:
                    type: object
        notify:
          type: array
          items:
            properties:
              uri:
                type: object
              request:
                type: object
                properties:
                  headers:
                    type: object
                  body:
                    type: object
              response:
                type: object
                properties:
                  http_status:
                    type: object
    RecommendedPriceTableResponse:
      type: object
      properties:
        ranges:
          type: array
          items:
            properties:
              position:
                description: "The order number in a pricing table."
                type: integer
              from:
                description: "The lower boundary value of the range."
                type: number
              to:
                description: "The upper boundary value of the range."
                type: number
    ResendInviteAdminRequest:
      type: object
      required:
      - email
      properties:
        email:
          description: "The user's email."
          type: string
    CreateFileResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The response code."
              type: string
            message:
              description: "The response message."
              type: string
            details:
              description: "The response details."
              type: string
        file_id:
          description: "The unique identifier for the file."
          type: string
    ConfirmUserEmailRequest:
      type: object
      required:
      - token
      properties:
        token:
          description: "An encripted string to confirm the user registration."
          type: string
    MerchantCompanyInfo:
      type: object
      required:
      - name
      - alternative_name
      - website
      - country
      - zip
      - registration_number
      properties:
        name:
          description: "The merchant's company name."
          type: string
        alternative_name:
          description: "The merchant's company alternative name."
          type: string
        website:
          description: "The merchant's company website."
          type: string
        country:
          description: "The merchant's company country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        state:
          description: "The merchant's company state."
          type: string
        zip:
          description: "The merchant's company ZIP code."
          type: string
        city:
          description: "The merchant's company city."
          type: string
        address:
          description: "The merchant's company address."
          type: string
        address_additional:
          description: "The merchant's company additional address."
          type: string
        registration_number:
          description: "The merchant's company registration number."
          type: string
        tax_id:
          description: "The merchant's company tax number."
          type: string
    PaylinksPaginate:
      type: object
      properties:
        count:
          description: "The total number of found paylinks."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the payment link."
                type: string
              object:
                description: "The system constant that contains the returned object's type. Const value: paylink."
                type: string
              products:
                description: "The list of the payment link's products."
                type: array
                items:
                  type: string
              merchant_id:
                description: "The unique identifier for the merchant."
                type: string
              project_id:
                description: "The unique identifier for the project."
                type: string
              name:
                description: "The payment link's name."
                type: string
              is_expired:
                description: "Has a true value if the payment link has expired."
                type: boolean
              visits:
                description: "The total number of visits."
                type: integer
              no_expiry_date:
                description: "Has a true value if the payment link has no expiry date."
                type: boolean
              products_type:
                description: "The type of products. Available values: product, key."
                type: string
              total_transactions:
                description: "The total number of transactions."
                type: integer
              sales_count:
                description: "The total number of sales."
                type: integer
              returns_count:
                description: "The total number of returns."
                type: integer
              conversion:
                description: "The conversion - sales per visits relation."
                type: number
              gross_sales_amount:
                description: "The gross amount of sales."
                type: number
              gross_returns_amount:
                description: "The gross amount of returns."
                type: number
              gross_total_amount:
                description: "The gross revenue."
                type: number
              transactions_currency:
                description: "The transactions currency. Three-letter currency code in ISO 4217, in uppercase."
                type: string
    UserProfile:
      type: object
      properties:
        id:
          description: "The unique identifier for the PaySuper user."
          type: string
        email:
          type: object
          required:
          - email
          properties:
            email:
              description: "The user's email address."
              type: string
            confirmed:
              description: "Whether the user's email address has been verified."
              type: boolean
        personal:
          type: object
          required:
          - first_name
          - last_name
          - position
          properties:
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            position:
              description: "The user's position in the company."
              type: string
        help:
          type: object
          properties:
            product_promotion_and_development:
              description: "Has a true value if the user needs help with product promotion and development."
              type: boolean
            released_game_promotion:
              description: "Has a true value if the user needs help with games promotion that have already been released."
              type: boolean
            international_sales:
              description: "Has a true value if the user needs help with international sales."
              type: boolean
            other:
              description: "Has a true value if the user needs help with other problems."
              type: boolean
        company:
          type: object
          required:
          - company_name
          - website
          properties:
            company_name:
              description: "The company's name."
              type: string
            website:
              description: "The company's website."
              type: string
            annual_income:
              type: object
              properties:
                from:
                  description: "The lower boundary value of the range."
                  type: integer
                to:
                  description: "The upper boundary value of the range."
                  type: integer
            number_of_employees:
              type: object
              properties:
                from:
                  description: "The lower boundary value of the range."
                  type: integer
                to:
                  description: "The upper boundary value of the range."
                  type: integer
            kind_of_activity:
              description: "The company's kind of activity. Available values: develop_and_publish_your_games, publish_games_of_other_companies, publish_your_games_through_other_publishers, other."
              type: string
            monetization:
              type: object
              properties:
                paid_subscription:
                  description: "Has a true value if the monetization strategy is buying the paid subscription by company's users."
                  type: boolean
                in_game_advertising:
                  description: "Has a true value if the monetization strategy is buying the in-game advertising."
                  type: boolean
                in_game_purchases:
                  description: "Has a true value if the monetization strategy is buying in-game purchases by company's users."
                  type: boolean
                premium_access:
                  description: "Has a true value if the monetization strategy is buying the premium access by company's users."
                  type: boolean
                other:
                  description: "Has a true value if the monetization has the other strategy."
                  type: boolean
            platforms:
              type: object
              properties:
                pc_mac:
                  description: "Has a true value if the platform is PC/MacOs."
                  type: boolean
                game_console:
                  description: "Has a true value if the platform is the game console."
                  type: boolean
                mobile_device:
                  description: "Has a true value if the platform is the mobile device."
                  type: boolean
                web_browser:
                  description: "Has a true value if the platform is the web browser."
                  type: boolean
                other:
                  description: "Has a true value if the platform has the other value."
                  type: boolean
        last_step:
          description: "The identifier for the last step of the wizard that the user need to finish."
          type: string
        centrifugo_token:
          description: "The user authorisation token to connect to the Centrifugo channel."
          type: string
    ListOrdersRequest:
      type: object
      properties:
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        file_type:
          description: "The supported file format. Available values: PDF, CSV, XLSX."
          type: string
        template:
          description: "The file template."
          type: string
        id:
          description: "The unique identifier for the order."
          type: string
        project:
          description: "The list of projects."
          type: array
          items:
            type: string
        payment_method:
          description: "The list of payment methods."
          type: array
          items:
            type: string
        country:
          description: "The list of the payer's countries."
          type: array
          items:
            type: string
        status:
          description: "The list of orders' statuses. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
          type: array
          items:
            type: string
        pm_date_from:
          description: "The start date when the payment was created."
          type: integer
        pm_date_to:
          description: "The end date when the payment was closed."
          type: integer
    MoneyBackCostSystemList:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the record about the merchant's tariffs."
                type: string
              name:
                description: "The payment method's name."
                type: string
              payout_currency:
                description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              undo_reason:
                description: "The return reason. Available values: refund, reversal, chargeback."
                type: string
              region:
                description: "The customer's region."
                type: string
              country:
                description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              days_from:
                description: "The number of days after the payment operation."
                type: integer
              payment_stage:
                description: "The payment stage."
                type: integer
              percent:
                description: "The fee of the payment method in percent."
                type: number
              fix_amount:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              is_active:
                description: "Has a true value if the rates record is active."
                type: boolean
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
              fix_amount_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
    Refund:
      type: object
      properties:
        id:
          description: "The unique identifier for the refund in PaySuper."
          type: string
        original_order:
          type: object
          properties:
            id:
              description: "The unique identifier for the refund in PaySuper."
              type: string
            uuid:
              description: "The public unique identifier for the refund in PaySuper."
              type: string
        external_id:
          description: "The unique identifier for the refund in the payment system."
          type: string
        amount:
          description: "The refund amount."
          type: number
        creatorId:
          description: "The unique identifier for the user initiated an action on the return."
          type: string
        reason:
          description: "The refund reason. Available values: Customer's request, Redeem chargeback, Purchase not provided, Card data was stolen."
          type: string
        currency:
          description: "The refund's currency. Three-letter currency code ISO 4217, in uppercase."
          type: string
        status:
          description: "The refund status. Available values: 0 - created, 1 - rejected on the payment system side, 2 - in process on the payment system side, 3 - successfully completed."
          type: integer
        payer_data:
          type: object
          properties:
            country:
              description: "The customer's country."
              type: string
            zip:
              description: "The customer's ZIP code."
              type: string
            state:
              description: "The customer's state."
              type: string
        sales_tax:
          description: "The refund tax fee."
          type: number
        is_chargeback:
          description: "Has a true value if this refund is a chargeback."
          type: boolean
        created_order_id:
          description: "The unique identifier for the original order for which the refund was made."
          type: string
    PaymentChannelCostSystemList:
      type: object
      properties:
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the payment method."
                type: string
              name:
                description: "The payment method's name."
                type: string
              region:
                description: "The customer's region."
                type: string
              country:
                description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              percent:
                description: "The fee of the payment method in percent."
                type: number
              fix_amount:
                description: "The fixed fee of the payment method in the particular currency."
                type: number
              fix_amount_currency:
                description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
                type: string
              is_active:
                description: "Has a true value if the rates record is active."
                type: boolean
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
    VatReportsPaginate:
      type: object
      properties:
        count:
          description: "The total number of the found reports."
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                description: "The unique identifier for the VAT report."
                type: string
              country:
                description: "The country's name. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                type: string
              vat_rate:
                description: "VAT rate."
                type: number
              currency:
                description: "The rate currency. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              transactions_count:
                description: "The total transactions."
                type: integer
              gross_revenue:
                description: "The gross revenue."
                type: number
              vat_amount:
                description: "The amount of VAT."
                type: number
              fees_amount:
                description: "The total amount of fees."
                type: number
              deduction_amount:
                description: "The deduction amount."
                type: number
              correction_amount:
                description: "The correction amount."
                type: number
              status:
                description: "The VAT report status. Available values: threshold, expired, pending, need_to_pay, paid, overdue, canceled."
                type: string
              country_annual_turnover:
                description: "The annual turnover for the country."
                type: number
              world_annual_turnover:
                description: "The world annual turnover."
                type: number
              amounts_approximate:
                description: "Has a true value if the amounts are non-final due to the currency exchange rates delay."
                type: boolean
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
    OrderCreateRequest:
      type: object
      required:
      - project
      - type
      properties:
        project:
          description: "The unique identifier for the Project found in the merchant account in the PaySuper Dashboard."
          type: string
        amount:
          description: "The order amount as a positive number. It is required for a simple checkout payment."
          type: number
        currency:
          description: "The currency of the order. Three-letter Currency Code ISO 4217, in uppercase. If provided, the amount will be processed in this currency. It is required for a payment when the type equals to simple."
          type: string
        account:
          description: "The customer account in the merchant project."
          type: string
        description:
          description: "The arbitrary order description."
          type: string
        url_success:
          description: "The redirect URL for the successful payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        url_fail:
          description: "The redirect URL for the failed payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        products:
          description: "The list of unique identifiers of Products being in the Project. It is required if a payment type is equal to product or key."
          type: array
          items:
            type: string
        token:
          description: "An encrypted string that represents certain details of your customer (such as the customer ID, email and others), a game and purchase parameters. The token overrides the corresponding parameters (including required parameters) in an order object."
          type: string
        user:
          type: object
          properties:
            external_id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            name:
              description: "The customer's name."
              type: string
            email:
              description: "The customer's email address."
              type: string
            email_verified:
              description: "Whether the customer's email address has been verified on the merchant side."
              type: boolean
            phone:
              description: "The customer's phone number."
              type: string
            phone_verified:
              description: "Whether the customer's phone number has been verified on the merchant side."
              type: boolean
            ip:
              description: "The customer's IP address."
              type: string
            locale:
              description: "The customer's locale name. The language code in ISO 639-1 (for instance en-US)."
              type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        order:
          description: "The PaySuper unique identifier for the order."
          type: string
        type:
          description: "The order type. It depends on your sales option (Game Keys, Virtual Items, Virtual Currency the simple checkout). For products created as Game Keys use the key type, as Virtual Items - the product type, as Virtual Currency - the virtual_currency type, for a simple checkout - the simple type. Enum values: key, product, virtual_currency, simple."
          type: string
        platform_id:
          description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Enum values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
          type: string
        testing_case:
          description: "The webhook testing mode. Available values: correct_payment, non_existing_user, existing_user, invalid_signature."
          type: string
        form_mode:
          description: "The opening mode of the payment form on the project side. Available values: embed, iframe, standalone. Default value: embed."
          type: string
    KeyProduct:
      type: object
      properties:
        id:
          description: "The unique identifier for the key-activated product."
          type: string
        project_id:
          description: "The unique identifier for the project."
          type: string
        object:
          description: "The system constant that contains the returned object's type."
          type: string
        sku:
          description: "The SKU of the product."
          type: string
        default_currency:
          description: "The product's default currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        enabled:
          description: "Has a true value if the product is enabled."
          type: boolean
        platforms:
          type: array
          items:
            properties:
              id:
                description: "The unique name of the platform. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
                type: string
              name:
                description: "The full name of the platform. (for instance for gog - Good old games.com)"
                type: string
              prices:
                type: array
                items:
                  properties:
                    amount:
                      description: "The product's price."
                      type: number
                    currency:
                      description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The product's price region."
                      type: string
                    is_virtual_currency:
                      description: "Has a true value if the product's amount in the virtual currency."
                      type: boolean
              eula_url:
                description: "The license agreement link of the platform."
                type: string
              activation_url:
                description: "The link of the key's activation rules for the platform."
                type: string
              count:
                description: "The number of created keys for the platform."
                type: integer
        cover:
          type: object
          properties:
            images:
              type: object
              properties:
                en:
                  description: "The URL for EN localization."
                  type: string
                ru:
                  description: "The URL for RU localization."
                  type: string
                es:
                  description: "The URL for ES localization."
                  type: string
                de:
                  description: "The URL for DE localization."
                  type: string
                zh:
                  description: "The URL for ZH localization."
                  type: string
                fr:
                  description: "The URL for FR localization."
                  type: string
                ar:
                  description: "The URL for AR localization."
                  type: string
                pt:
                  description: "The URL for PT localization."
                  type: string
                it:
                  description: "The URL for IT localization."
                  type: string
                pl:
                  description: "The URL for PL localization."
                  type: string
                el:
                  description: "The URL for EL localization."
                  type: string
                ko:
                  description: "The URL for KO localization."
                  type: string
                ja:
                  description: "The URL for JA localization."
                  type: string
                vl:
                  description: "The URL for VL localization."
                  type: string
                he:
                  description: "The URL for HE localization."
                  type: string
                th:
                  description: "The URL for TH localization."
                  type: string
                cs:
                  description: "The URL for CS localization."
                  type: string
                bg:
                  description: "The URL for BG localization."
                  type: string
                fi:
                  description: "The URL for FI localization."
                  type: string
                sv:
                  description: "The URL for SV localization."
                  type: string
                da:
                  description: "The URL for DA localization."
                  type: string
                tr:
                  description: "The URL for TR localization."
                  type: string
            use_one_for_all:
              description: "Has a true value if the single cover is used for all localizations."
              type: boolean
        url:
          description: "The product's URL in the merchant project."
          type: string
        pricing:
          description: "The pricing mode. Available values: currency, manual, steam, default."
          type: string
    ChangeMerchantDataRequest:
      type: object
      properties:
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        has_merchant_signature:
          description: "Has a true value if the merchant has signed the license agreement."
          type: boolean
        has_psp_signature:
          description: "Has a true value if PaySuper has signed the license agreement."
          type: boolean
    AcceptInviteRequest:
      type: object
      required:
      - token
      - user_id
      - email
      properties:
        token:
          description: "The invitation token."
          type: string
        user_id:
          description: "The unique identifier for the user."
          type: string
        email:
          description: "The user's email address."
          type: string
    ChangePaymentMethodResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          description: "The response error message (if any)."
          type: string
    TokenRequest:
      type: object
      properties:
        user:
          type: object
          required:
          - id
          properties:
            id:
              description: "The unique identifier for the customer in the merchant project."
              type: string
            email:
              type: object
              properties:
                value:
                  description: "The customer’s email address."
                  type: string
                verified:
                  description: "Whether the email has been verified on the merchant side."
                  type: boolean
            phone:
              type: object
              properties:
                value:
                  description: "The customer’s phone."
                  type: string
                verified:
                  description: "Whether the phone has been verified on the merchant side."
                  type: boolean
            name:
              type: object
              properties:
                value:
                  description: "The customer’s name."
                  type: string
            ip:
              type: object
              properties:
                value:
                  description: "The customer’s IP address."
                  type: string
            locale:
              type: object
              properties:
                value:
                  description: "The customer’s locale name. The Accept-Language format by RFC 7231."
                  type: string
            address:
              type: object
              properties:
                country:
                  description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
                  type: string
                city:
                  description: "The customer’s city."
                  type: string
                postal_code:
                  description: "The customer's postal code."
                  type: string
                state:
                  description: "The customer's state code in ISO 3166-2."
                  type: string
        settings:
          type: object
          required:
          - project_id
          - type
          properties:
            project_id:
              description: "The unique identifier for the Project found in the merchant account in the PaySuper Dashboard."
              type: string
            return_url:
              type: object
              properties:
                success:
                  description: "The redirect URL for a successful payment."
                  type: string
                fail:
                  description: "The redirect URL for a failed payment."
                  type: string
            currency:
              description: "The order currency. Three-letter Currency Code ISO 4217, in uppercase. It's required for a simple checkout payment."
              type: string
            amount:
              description: "The order amount. It's required for a simple checkout payment."
              type: number
            description:
              description: "An arbitrary order description."
              type: string
            products_ids:
              description: "A list of unique identifiers for Project's products. It's required if a payment type equals to ‘product’ or ‘key’."
              type: array
              items:
                type: string
            platform_id:
              description: "The default platform's name for which the customer buys a key. This field is used only for the key type. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
              type: string
            type:
              description: "The order type. It depends on your sales option: Game Keys, Virtual Items, Virtual Currency, Simple Checkout. Available values: key, product, virtual_currency, simple."
              type: string
            is_buy_for_virtual_currency:
              description: "Has a true value if an order must be processed using a virtual currency."
              type: boolean
            button_caption:
              description: "The redirect button messages after the successful or failed payment. If it has an empty value the redirect message will be set at OK."
              type: string
    CreateOrUpdateKeyProductRequest:
      type: object
      required:
      - project_id
      - sku
      - default_currency
      - object
      - pricing
      properties:
        project_id:
          description: "The unique identifier for the project."
          type: string
        sku:
          description: "The SKU of the product."
          type: string
        cover:
          type: object
          properties:
            images:
              type: object
              properties:
                en:
                  description: "The URL for EN localization."
                  type: string
                ru:
                  description: "The URL for RU localization."
                  type: string
                es:
                  description: "The URL for ES localization."
                  type: string
                de:
                  description: "The URL for DE localization."
                  type: string
                zh:
                  description: "The URL for ZH localization."
                  type: string
                fr:
                  description: "The URL for FR localization."
                  type: string
                ar:
                  description: "The URL for AR localization."
                  type: string
                pt:
                  description: "The URL for PT localization."
                  type: string
                it:
                  description: "The URL for IT localization."
                  type: string
                pl:
                  description: "The URL for PL localization."
                  type: string
                el:
                  description: "The URL for EL localization."
                  type: string
                ko:
                  description: "The URL for KO localization."
                  type: string
                ja:
                  description: "The URL for JA localization."
                  type: string
                vl:
                  description: "The URL for VL localization."
                  type: string
                he:
                  description: "The URL for HE localization."
                  type: string
                th:
                  description: "The URL for TH localization."
                  type: string
                cs:
                  description: "The URL for CS localization."
                  type: string
                bg:
                  description: "The URL for BG localization."
                  type: string
                fi:
                  description: "The URL for FI localization."
                  type: string
                sv:
                  description: "The URL for SV localization."
                  type: string
                da:
                  description: "The URL for DA localization."
                  type: string
                tr:
                  description: "The URL for TR localization."
                  type: string
            use_one_for_all:
              description: "Has a true value if the single cover is used for all localizations."
              type: boolean
        url:
          description: "The product's URL in the merchant project."
          type: string
        default_currency:
          description: "The product's default currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        id:
          description: "The unique identifier for the key-activated product."
          type: string
        object:
          description: "The system constant that contains the returned object's type."
          type: string
        platforms:
          type: array
          items:
            properties:
              id:
                description: "The unique name of the platform. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
                type: string
              name:
                description: "The full name of the platform. (for instance for gog - Good old games.com)"
                type: string
              prices:
                type: array
                items:
                  properties:
                    amount:
                      description: "The product's price."
                      type: number
                    currency:
                      description: "The product's price currency. Three-letter Currency Code ISO 4217, in uppercase."
                      type: string
                    region:
                      description: "The product's price region."
                      type: string
                    is_virtual_currency:
                      description: "Has a true value if the product's amount in the virtual currency."
                      type: boolean
              eula_url:
                description: "The license agreement link of the platform."
                type: string
              activation_url:
                description: "The link of the key's activation rules for the platform."
                type: string
              count:
                description: "The number of created keys for the platform."
                type: integer
        pricing:
          description: "The pricing mode. Available values: currency, manual, steam, default."
          type: string
    MerchantBanking:
      type: object
      required:
      - currency
      - name
      - address
      - account_number
      - swift
      properties:
        currency:
          description: "The merchant's bank account currency."
          type: string
        name:
          description: "The merchant's bank name."
          type: string
        address:
          description: "The merchant's bank address."
          type: string
        account_number:
          description: "The merchant's bank account number."
          type: string
        swift:
          description: "The merchant's bank SWIFT code."
          type: string
        details:
          description: "Additional details about the merchant's bank account."
          type: string
        correspondent_account:
          description: "The merchant's bank's correspondent account number."
          type: string
        processing_default_currency:
          description: "The merchant's default processing currency, used as fallback currency for prices in virtual item, virtual currency, game key and other."
          type: string
    PaymentChannelCostMerchant:
      type: object
      properties:
        id:
          description: "The unique identifier for the record about the merchant's tariffs."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant."
          type: string
        name:
          description: "The payment method's name."
          type: string
        payout_currency:
          description: "The payout currency. Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        min_amount:
          description: "The minimum payment amount."
          type: number
        region:
          description: "The customer's region."
          type: string
        country:
          description: "The customer's country. Two-letter country code in ISO 3166-1, in uppercase (for instance US)."
          type: string
        method_percent:
          description: "The fee of the payment method in percent."
          type: number
        method_fix_amount:
          description: "The fixed fee of the payment method in the particular currency."
          type: number
        method_fix_amount_currency:
          description: "The currency of the fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
          type: string
        ps_percent:
          description: "The PaySuper fee in percent."
          type: number
        ps_fixed_fee:
          description: "The PaySuper fixed fee in a particular currency."
          type: number
        ps_fixed_fee_currency:
          description: "The currency of the PaySuper fixed fee of the payment method. Three-letter currency code ISO 4217, in uppercase."
          type: string
        is_active:
          description: "Has a true value if the rates record is active for the merchant."
          type: boolean
        mcc_code:
          description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
          type: string
    GetPaymentMethodSettingsResponse:
      type: object
      properties:
        params:
          type: array
          items:
            properties:
              currency:
                description: "The currency of the payment method. Three-letter Currency Code ISO 4217, in uppercase."
                type: string
              mcc_code:
                description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
                type: string
              operating_company_id:
                description: "The unique identifier for the operating company."
                type: string
              brand:
                description: "The list of the card issuer brands."
                type: array
                items:
                  type: string
    UpdatePayoutDocumentRequest:
      type: object
      properties:
        payout_document_id:
          description: "The unique identifier for the payout document."
          type: string
        transaction:
          description: "The unique identifier for the payout transaction."
          type: string
        status:
          description: "The document status. Available values: skip, pending, in_progress, paid, canceled, failed."
          type: string
        failure_code:
          description: "The payout's failure code. Available values: account_closed, account_frozen, account_restricted, destination_bank_invalid, could_not_process, declined, insufficient_funds, invalid_account_number, incorrect_account_holder_name, invalid_currency."
          type: string
        failure_message:
          description: "The payout's failure message."
          type: string
        failure_transaction:
          description: "The unique identifier for the payout failure transaction."
          type: string
        ip:
          description: "The IP address of the user which updated the payout document."
          type: string
    ChangeRoleForAdminUserRequest:
      type: object
      required:
      - role
      properties:
        role:
          description: "The user role's name."
          type: string
    InviteUserAdminRequest:
      type: object
      required:
      - email
      - role
      properties:
        email:
          description: "The user's email address to obtain an invitation about the admin role."
          type: string
        role:
          description: "The admin role for the invited user."
          type: string
    OnboardingFileData:
      type: object
      properties:
        url:
          description: "The URL for the printable agreement."
          type: string
        metadata:
          type: object
          properties:
            name:
              description: "The agreement's file name."
              type: string
            extension:
              description: "The agreement's file extension."
              type: string
            content_type:
              description: "The agreement's file content type."
              type: string
            size:
              description: "The agreement's file size in KB."
              type: integer
    PriceGroup:
      type: object
      required:
      - id
      - currency
      properties:
        id:
          description: "The unique identifier for the price group."
          type: string
        currency:
          description: "Three-letter Currency Code ISO 4217, in uppercase."
          type: string
        region:
          description: "The region's name."
          type: string
        is_active:
          description: "Has a true value if the price group is active."
          type: boolean
    AcceptInviteResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        role:
          type: object
          required:
          - id
          - merchant_id
          - role
          - user_id
          - first_name
          - last_name
          - email
          properties:
            id:
              description: "The unique identifier for the user's role."
              type: string
            merchant_id:
              description: "The unique identifier for the merchant (only for merchant users)."
              type: string
            role:
              description: "The user's role."
              type: string
            status:
              description: "The user's invitation status. Available values: invited, approved."
              type: string
            user_id:
              description: "The unique identifier for the user."
              type: string
            first_name:
              description: "The user's first name."
              type: string
            last_name:
              description: "The user's last name."
              type: string
            email:
              description: "The user's email address."
              type: string
    GetPlatformKeyCountResponse:
      type: object
      properties:
        status:
          description: "The response status code."
          type: integer
        message:
          type: object
          properties:
            code:
              description: "The error code."
              type: string
            message:
              description: "The error short description."
              type: string
            details:
              description: "The error details."
              type: string
        count:
          description: "The total number of keys for products."
          type: integer
    Notification:
      type: object
      properties:
        id:
          description: "The unique identifier for the notification."
          type: string
        message:
          description: "The notification message."
          type: string
        merchant_id:
          description: "The unique identifier for the merchant who is the recipient of the notification."
          type: string
        user_id:
          description: "The unique identifier for the user who is the sender of the notification."
          type: string
        is_system:
          description: "Has a true value if the notification is generated automatically."
          type: boolean
        is_read:
          description: "Has a true value if the recipient has read the notification."
          type: boolean
        statuses:
          type: object
          properties:
            from:
              description: "The before changes status."
              type: integer
            to:
              description: "The after changes status."
              type: integer
paths:
  /system/api/v1/users/roles/{role_id}:
    put:
      summary: Update the admin user role
      operationId: adminUserRoleChangeRole
      description: Update the admin user role using the role ID
      tags:
      - Admin user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoleForAdminUserRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's role was successfully changed"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the admin user
      operationId: adminUserRoleDeleteUser
      description: Delete the admin user
      tags:
      - Admin user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the user was successfully removed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponseWithStatus"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the admin user role
      operationId: adminUserRoleGetUser
      description: Get the admin user role data
      tags:
      - Admin user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the admin user role data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRoleResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/users:
    get:
      summary: Get the admin users list
      operationId: usersListUsers
      description: Get the admin users list
      tags:
      - Admin user roles
      responses:
        "200":
          description: Returns the admin users list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRole"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/users/roles/invite:
    post:
      summary: Send an invitation to the admin user
      operationId: adminUserInviteSendInvite
      description: Send an invitation to add the user as the administrator
      tags:
      - Admin user roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserAdminRequest"
      responses:
        "200":
          description: Returns the admin user role data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InviteUserAdminResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/users/roles/resend:
    post:
      summary: Resend an invitation to the user
      operationId: adminResendInviteResendInvite
      description: Resend an invitation to add the user as the administrator
      tags:
      - Admin user roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendInviteAdminRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's invitation was successfully send"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponseWithStatus"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/roles:
    get:
      summary: Get the admin roles
      operationId: adminListRolesListRoles
      description: Get the admin roles
      tags:
      - Admin user roles
      responses:
        "200":
          description: Returns the admin roles data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleListResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/country:
    get:
      summary: Get the list of currencies
      operationId: countryGet
      description: "Get the full list of currencies using the country's name"
      tags:
      - Country
      parameters:
      - name: name
        description: "The country's name or two-letter country code by ISO 3166-1."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountriesList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/country/{code}:
    get:
      summary: Get the country data
      operationId: countryGetById
      description: "Get the country data by two-letter country code in ISO 3166-1"
      tags:
      - Country
      parameters:
      - name: code
        description: "Two-letter country code in ISO 3166-1"
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country data (taxes, currency, region and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/main:
    get:
      summary: Get the main reports for the Dashboard
      operationId: dashboardMainPathGetMainReports
      description: "Get the main reports for the Dashboard such as Gross revenue, Total transactions, VAT, Average revenue per user (ARPU)"
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the main reports data for the Dashboard
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardMainReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/revenue_dynamics:
    get:
      summary: Get the revenue dynamic report for the Dashboard
      operationId: dashboardRevenueDynamicsPathGetRevenueDynamicsReport
      description: Get the revenue dynamic report for the Dashboard
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the revenue dynamic report data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardRevenueDynamicReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/dashboard/base:
    get:
      summary: Get the base report for the Dashboard
      operationId: dashboardBasePathGetBaseReports
      description: "Get the base report for the Dashboard such as Revenue by country, Sales today, Sources."
      tags:
      - Dashboard
      parameters:
      - name: period
        description: "The fixed period. Available values: current_day, previous_day, current_week, previous_week, current_month, previous_month, current_quarter, previous_quarter, current_year, previous_year."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the base report data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardBaseReports"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/keys/{key_id}:
    get:
      summary: Get the key data
      operationId: keysIdPathGetKeyInfo
      description: Get the key data
      tags:
      - Key
      - Onboarding
      parameters:
      - name: key_id
        description: The unique identifier for the key.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the key data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/key-products/{key_product_id}/unpublish:
    post:
      summary: "Make the key-activated product inactive"
      operationId: keyProductsUnPublishPathUnpublishKeyProduct
      description: "Make the key-activated product inactive"
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/key-products/{key_product_id}/publish:
    post:
      summary: "Make the key-activated product active"
      operationId: keyProductsPublishPathPublishKeyProduct
      description: "Make the key-activated product active"
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/platforms:
    get:
      summary: Get available platforms list
      operationId: platformsPathGetPlatformsList
      description: Get available platforms list
      tags:
      - Product
      parameters:
      - name: limit
        description: The number of platforms returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the available platforms list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlatformsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/key-products/{key_product_id}:
    delete:
      summary: "Remove the key-activated product"
      operationId: keyProductsIdPathDeleteKeyProductById
      description: "Remove the key-activated product using the product ID"
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: "Update the key-activated product"
      operationId: keyProductsIdPathChangeKeyProduct
      description: "Update the key-activated product"
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateKeyProductRequest"
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: "Get the key-activated product using the product ID"
      operationId: keyProductsIdPathGetKeyProductById
      description: "Get the key-activated product using the product ID"
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/key-products:
    post:
      summary: "Create a new key-activated product"
      operationId: keyProductsPathCreateKeyProduct
      description: "Create a new key-activated product"
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateKeyProductRequest"
      responses:
        "200":
          description: "Returns the key-activated product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProduct"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: "Get the list of the key-activated products"
      operationId: keyProductsPathGetKeyProductList
      description: "Get the list of the key-activated products. This list can be filtered by name, sku and other parameters."
      tags:
      - Product
      parameters:
      - name: name
        description: "The unique identifier for the key-activated product."
        in: query
        required: true
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of the key-activated products"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListKeyProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/key-products/{key_product_id}:
    get:
      summary: "Get the list of platforms and prices for the key-activated product"
      operationId: keyProductsIdPathGetKeyProduct
      description: "Get the list of platforms and prices for the key-activated product. This list can be filtered by country, language or currency."
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: "The unique identifier for the key-activated product."
        in: path
        required: true
        schema:
          type: string
      - name: country
        description: The country code to calculate the price for.
        in: query
        required: false
        schema:
          type: string
      - name: language
        description: The language.
        in: query
        required: false
        schema:
          type: string
      - name: currency
        description: The price currency.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "Returns the product data (platforms, prices and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyProductInfo"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/key-products/{key_product_id}/platforms/{platform_id}/file:
    post:
      summary: Send the file with the list of keys
      operationId: keyProductsPlatformsFilePathUploadKeys
      description: Send the file with the list of keys to process them
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: "The unique identifier for the key-activated product."
        in: path
        required: true
        schema:
          type: string
      - name: platform_id
        description: "The platform's name. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/PlatformKeysFileRequest"
      responses:
        "200":
          description: Returns the number of the processed keys
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformKeysFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/key-products/{key_product_id}/platforms/{platform_id}/count:
    get:
      summary: Get the number of keys for the specified platform and product
      operationId: keyProductsPlatformsCountPathGetCountOfKeys
      description: Get the number of keys for the specified platform and product
      tags:
      - Product
      parameters:
      - name: key_product_id
        description: "The unique identifier for the key-activated product."
        in: path
        required: true
        schema:
          type: string
      - name: platform_id
        description: "The platform's name. Available values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the number of keys for the specified platform and product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPlatformKeyCountResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/balance:
    get:
      summary: "Get the merchant's balance"
      operationId: balancePathGetBalance
      description: "Get the merchant's balance"
      tags:
      - Balance
      responses:
        "200":
          description: "Returns the merchant's balance data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantBalance"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/balance/{merchant_id}:
    get:
      summary: "Get the merchant's balance using the merchant ID"
      operationId: balanceMerchantPathGetBalance
      description: "Get the merchant's balance using the merchant ID"
      tags:
      - Balance
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the merchant's balance data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantBalance"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/users/roles/{role_id}:
    put:
      summary: Update the merchant user role
      operationId: merchantUsersRoleСhangeRole
      description: Update the merchant user role using the role ID
      tags:
      - Merchant user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns an empty response body if the user's role was successfully changed"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the merchant user
      operationId: merchantUsersRoleDeleteUser
      description: Delete the merchant user
      tags:
      - Merchant user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the user was successfully removed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponseWithStatus"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the merchant user role
      operationId: merchantUsersRoleGetUser
      description: Get the merchant user role
      tags:
      - Merchant user roles
      parameters:
      - name: role_id
        description: The unique identifier for the role.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the merchant user role data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRoleResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/users:
    get:
      summary: Get the merchant users list
      operationId: merchantUsersGetMerchantUsers
      description: Get the merchant users list
      tags:
      - Merchant user roles
      responses:
        "200":
          description: Returns the merchant users list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRole"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/invite:
    post:
      summary: Send an invitation to the merchant user
      operationId: merchantInviteSendInvite
      description: Send an invitation to add the user as the merchant
      tags:
      - Merchant user roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserMerchantRequest"
      responses:
        "200":
          description: Returns the merchant user role data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InviteUserMerchantResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/users/resend:
    post:
      summary: Resend an invitation to the user
      operationId: merchantInviteResendResendInvite
      description: Resend an invitation to add the user as the merchant
      tags:
      - Merchant user roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendInviteMerchantRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's invitation was successfully send"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponseWithStatus"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/roles:
    get:
      summary: Get the merchant roles
      operationId: merchantListRolesListRoles
      description: Get the merchant roles
      tags:
      - Merchant user roles
      responses:
        "200":
          description: Returns the merchant roles data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleListResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}:
    get:
      summary: Get the merchant user
      operationId: merchantsIdPathGetMerchant
      description: Get the merchant user using the user ID
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the merchant user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants:
    get:
      summary: Get the merchants list
      operationId: merchantsPathListMerchants
      description: Get the merchants list. This list can be filtered.
      tags:
      - Onboarding
      parameters:
      - name: name
        description: "The merchant's name."
        in: query
        required: false
        schema:
          type: string
      - name: last_payout_date_from
        description: The start date of the payout to the merchant.
        in: query
        required: false
        schema:
          type: integer
      - name: last_payout_date_to
        description: The end date of the payout to the merchant.
        in: query
        required: false
        schema:
          type: integer
      - name: last_payout_amount
        description: The last payout amount.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the merchant's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: quick_search
        description: "The quick search by the merchant's name or the user owner email."
        in: query
        required: false
        schema:
          type: string
      - name: status
        description: "The merchant's statuses list."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: registration_date_from
        description: The start date of the owner was registered.
        in: query
        required: false
        schema:
          type: integer
      - name: registration_date_to
        description: The end date of the owner was registered.
        in: query
        required: false
        schema:
          type: integer
      - name: received_date_from
        description: The start date when the license agreement was signed by the merchant owner.
        in: query
        required: false
        schema:
          type: integer
      - name: received_date_to
        description: The end date when the license agreement was signed by the merchant owner.
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of merchants returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the merchants list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantListingResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/change-status:
    put:
      summary: "Update the merchant's status"
      operationId: merchantsIdChangeStatusCompanyPathChangeMerchantStatus
      description: "Update the merchant's status"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantChangeStatusRequest"
      responses:
        "200":
          description: Returns the merchant user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/notifications:
    post:
      summary: Create a new notification for the merchant
      operationId: merchantsIdNotificationsPathCreateNotification
      description: Create a new notification for the merchant
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
      responses:
        "200":
          description: Returns the notification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: "Get the list of merchant's notifications"
      operationId: merchantsIdNotificationsPathListNotifications
      description: "Get the list of merchant's notifications"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: user
        description: The unique identifier for the user who is the sender of the notification.
        in: query
        required: false
        schema:
          type: string
      - name: is_system
        description: "Available values: 1 - the notifications between the merchant's owner and the PaySuper admin, 2 - the notifications generated automatically."
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of notifications returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the notification's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Returns the list of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}:
    get:
      summary: "Get the merchant's notification"
      operationId: merchantsNotificationsIdPathGetNotification
      description: "Get the merchant's notification using the notification ID"
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications:
    get:
      summary: "Get the list of merchant's notifications"
      operationId: merchantsNotificationsPathListNotifications
      description: "Get the list of merchant's notifications"
      tags:
      - Onboarding
      parameters:
      - name: user
        description: The unique identifier for the user who is the sender of the notification.
        in: query
        required: false
        schema:
          type: string
      - name: is_system
        description: "Available values: 1 - the notifications between the merchant's owner and the PaySuper admin, 2 - the notifications generated automatically."
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of notifications returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the notification's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Returns the list of notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/notifications/{notification_id}/mark-as-read:
    put:
      summary: Mark the notification status as read
      operationId: merchantsNotificationsMarkReadPathMarkAsReadNotification
      description: Mark the notification status as read using the notification ID
      tags:
      - Onboarding
      parameters:
      - name: notification_id
        description: The unique identifier for the notification.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the notification data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants:
    patch:
      summary: "Update the merchant's agreement signature"
      operationId: merchantsPathChangeAgreement
      description: "Update the merchant's agreement signature using the merchant ID"
      tags:
      - Onboarding
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeMerchantDataRequest"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement/document:
    get:
      summary: "Download the merchant's agreement document"
      operationId: merchantsAgreementDocumentPathGetAgreementDocument
      description: "Download the merchant's agreement document"
      tags:
      - Onboarding
      responses:
        "200":
          description: "Returns the merchant's agreement file"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/agreement/document:
    get:
      summary: "Download the merchant's agreement document"
      operationId: merchantsIdAgreementDocumentPathGetAgreementDocument
      description: "Download the merchant's agreement document"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the merchant's agreement file"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/company:
    put:
      summary: "Update the merchant's company information"
      operationId: merchantsCompanyPathSetMerchantCompany
      description: "Update the merchant's company information for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantCompanyInfo"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/company:
    put:
      summary: "Update the merchant's company information"
      operationId: merchantsIdCompanyPathSetMerchantCompany
      description: "Update the merchant's company information"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantCompanyInfo"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/contacts:
    put:
      summary: "Update the merchant's contacts"
      operationId: merchantsContactsPathSetMerchantContacts
      description: "Update the merchant's contacts for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantContact"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/contacts:
    put:
      summary: "Update the merchant's contacts"
      operationId: merchantsIdContactsPathSetMerchantContacts
      description: "Update the merchant's contacts for the authorized merchant"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantContact"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/banking:
    put:
      summary: "Update the merchant's banking data"
      operationId: merchantsBankingPathSetMerchantBanking
      description: "Update the merchant's banking data for the authorized merchant"
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantBanking"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/banking:
    put:
      summary: "Update the merchant's banking data"
      operationId: merchantsIdBankingPathSetMerchantBanking
      description: "Update the merchant's banking data for the authorized merchant"
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantBanking"
      responses:
        "200":
          description: Returns the merchant data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/status:
    get:
      summary: Get the merchant profile filling out status
      operationId: merchantsStatusCompanyPathGetMerchantStatus
      description: Get the merchant profile filling out status for every steps
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the merchant profile filling out status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantOnboardingCompleteDataResponseItem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/tariffs:
    get:
      summary: Get the tariff rates
      operationId: merchantsTariffsPathGetTariffRates
      description: Get the tariff rates
      tags:
      - Onboarding
      parameters:
      - name: region
        description: "The merchant's home region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: true
        schema:
          type: string
      - name: payer_region
        description: "The payer's region name. Available values: asia, europe, latin_america, russia_and_cis, worldwide."
        in: query
        required: false
        schema:
          type: string
      - name: min_amount
        description: The minimum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: max_amount
        description: The maximum payment amount.
        in: query
        required: false
        schema:
          type: integer
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the tariff rates for the specified region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantTariffRatesResponseItems"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Set the tariff rates
      operationId: merchantsTariffsPathSetTariffRates
      description: Set the tariff rates using the merchant ID
      tags:
      - Onboarding
      parameters:
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the tariff was successfully set
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/tariffs:
    post:
      summary: Set the tariff rates
      operationId: merchantsIdTariffsPathSetTariffRates
      description: Set the tariff rates using the merchant ID
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: merchant_operations_type
        description: "The merchant's operations type. Available values: low-risk, high-risk."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the tariff was successfully set
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/agreement:
    get:
      summary: Create the license agreement
      operationId: merchantsAgreementPathGetMerchantAgreementData
      description: Create the license agreement
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the printable agreement document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardingFileData"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/agreement:
    get:
      summary: Create the license agreement
      operationId: merchantsIdAgreementPathGetSystemAgreementData
      description: Create the license agreement
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the printable agreement document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnboardingFileData"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/enable:
    put:
      summary: Enable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutEnablePathEnableMerchantManualPayout
      description: Enable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was enabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/merchants/manual_payout/disable:
    put:
      summary: Disable the manual payouts for the merchant
      operationId: merchantsIdManualPayoutDisablePathDisableMerchantManualPayout
      description: Disable the manual payouts for the merchant
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns an empty response body if the manual payouts was disabled
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/merchants/{merchant_id}/set_operating_company:
    post:
      summary: Set the operating company to the merchant
      operationId: merchantsIdSetOperatingCompanyPathSetOperatingCompany
      description: Set the operating company to the merchant
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMerchantOperatingCompanyRequest"
      responses:
        "200":
          description: Returns the merchant user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/operating_company:
    get:
      summary: Get the operating companies list
      operationId: operatingCompanyPathGetOperatingCompanyList
      description: Get the operating companies list
      tags:
      - Operating company
      responses:
        "200":
          description: Returns the operating companies list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperatingCompany"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a new operating company
      operationId: operatingCompanyPathAddOperatingCompany
      description: Create a new operating company
      tags:
      - Operating company
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperatingCompany"
      responses:
        "204":
          description: Returns an empty response body if the operating company has been successfully added
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/operating_company/{id}:
    get:
      summary: Get the operating company
      operationId: operatingCompanyIdPathGetOperatingCompany
      description: Get the operating company data using the operating company ID
      tags:
      - Operating company
      parameters:
      - name: id
        description: The unique identifier for the operating company.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the operating company data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperatingCompany"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Update the operating company
      operationId: operatingCompanyIdPathUpdateOperatingCompany
      description: Update the operating company
      tags:
      - Operating company
      parameters:
      - name: id
        description: The unique identifier for the operating company.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperatingCompany"
      responses:
        "204":
          description: Returns an empty response body if the operating company has been successfully updated
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/order/{order_id}:
    get:
      summary: Get the full data about the order
      operationId: adminOrderIdPathGetOrderPublic
      description: Get the full data about the order using the order ID
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the order data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderViewPublic"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/order:
    get:
      summary: Get the orders list
      operationId: adminOrderPathListOrdersPublic
      description: "Get the orders list. This list can be filtered by the order's parameters."
      tags:
      - Order
      parameters:
      - name: id
        description: The unique identifier for the order.
        in: query
        required: false
        schema:
          type: string
      - name: project
        description: The list of projects.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: payment_method
        description: The list of payment methods.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: country
        description: "The list of the payer's countries."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: status
        description: "The list of orders' statuses. Available values: created, processed, canceled, rejected, refunded, chargeback, pending."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: account
        description: "The payer account (for instance an account in the merchant's project, the account in the payment system, the payer email, etc.)"
        in: query
        required: false
        schema:
          type: string
      - name: pm_date_from
        description: The start date when the payment was created.
        in: query
        required: false
        schema:
          type: integer
      - name: pm_date_to
        description: The end date when the payment was closed.
        in: query
        required: false
        schema:
          type: integer
      - name: project_date_from
        description: The end date when the payment was created in the project.
        in: query
        required: false
        schema:
          type: integer
      - name: project_date_to
        description: The end date when the payment was closed in the project.
        in: query
        required: false
        schema:
          type: integer
      - name: quick_search
        description: "The search string that contains multiple fields - the unique identifier for the order, the user external identifier, the project order identifier, the project's name, the payment method's name."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of orders returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: "The list of the order's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: type
        description: "The sales type. Available values: simple, product, key."
        in: query
        required: false
        schema:
          type: string
      - name: hide_test
        description: Has a true value for getting only production orders.
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Returns the orders list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrdersPublicResponseItem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/order/download:
    post:
      summary: Export the orders list
      operationId: orderDownloadPathDownloadOrdersPublic
      description: Export the orders list
      tags:
      - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOrdersRequest"
      responses:
        "200":
          description: Returns the file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/order/{order_id}/refunds/{refund_id}:
    get:
      summary: Get the refund data
      operationId: orderRefundsIdsPathGetRefund
      description: Get the refund data using the order and refund IDs
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      - name: refund_id
        description: The unique identifier for the refund.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the refund data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/order/{order_id}/refunds:
    get:
      summary: "Get the order's refunds list"
      operationId: orderRefundsPathListRefunds
      description: "Get the order's refunds list using the order ID"
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      - name: limit
        description: The number of refunds returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the order's refunds list"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRefundsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a refund
      operationId: orderRefundsPathCreateRefund
      description: Create a refund using the order ID
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRefundRequest"
      responses:
        "200":
          description: Returns the refund data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/order/{order_id}/replace_code:
    put:
      summary: Replaces the activation code in the order
      operationId: orderReplaceCodePathReplaceCode
      description: Replaces the activation code in the order
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeCodeInOrderRequest"
      responses:
        "200":
          description: Returns the order data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/order/{order_id}/logs:
    get:
      summary: "Get the order's logs list"
      operationId: orderLogsPathListLogs
      description: "Get the order's logs list using the order ID"
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the order's logs list"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderLogsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks:
    get:
      summary: Get the list of payment links
      operationId: paylinksPathGetPaylinksList
      description: Get the list of payment links for the authorized merchant
      tags:
      - Payment link
      parameters:
      - name: limit
        description: The number of payment links returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the list of payment links
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaylinksPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a payment link
      operationId: paylinksPathCreatePaylink
      description: Create a payment link
      tags:
      - Payment link
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}:
    get:
      summary: Get the payment link data
      operationId: paylinksIdPathGetPaylink
      description: Get the payment link data using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the payment link
      operationId: paylinksIdPathDeletePaylink
      description: Delete the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the payment link was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The payment link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the payment link
      operationId: paylinksIdPathUpdatePaylink
      description: Update the payment link using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaylinkRequest"
      responses:
        "200":
          description: Returns the created payment link data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Paylink"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/url:
    get:
      summary: Get the payment link URL
      operationId: paylinksUrlPathGetPaylinkUrl
      description: Get the payment link URL using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: utm_source
        description: "The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords."
        in: query
        required: false
        schema:
          type: string
      - name: utm_medium
        description: "The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter."
        in: query
        required: false
        schema:
          type: string
      - name: utm_campaign
        description: "The UTM-tag of the advertising campaign, for example: Online games, Simulation game."
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the payment link URL with UTM parameters (if any)
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/summary:
    get:
      summary: Get the payment link summary for the Dashboard
      operationId: paylinksIdStatSummaryPathGetPaylinkStatSummary
      description: Get payment link statistical results for the period using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/country:
    get:
      summary: Get the payment link summary grouped by the country
      operationId: paylinksIdStatCountryPathGetPaylinkStatByCountry
      description: Get payment link statistical results for the period grouped by the country using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/referrer:
    get:
      summary: Get the payment link summary grouped by the referrer
      operationId: paylinksIdStatReferrerPathGetPaylinkStatByReferrer
      description: Get payment link statistical results for the period grouped by the referrer using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/date:
    get:
      summary: Get the payment link summary grouped by the date
      operationId: paylinksIdStatDatePathGetPaylinkStatByDate
      description: Get payment link statistical results for the period grouped by the date using the payment link ID
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/dashboard/utm:
    get:
      summary: "Get the payment link summary grouped by the UTM-tag"
      operationId: paylinksIdStatUtmPathGetPaylinkStatByUtm
      description: "Get payment link statistical results for the period grouped by the UTM-tag using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: period_from
        description: The first date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the statistical results are calculated.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the payment link summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupStatCommon"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/paylinks/{id}/transactions:
    get:
      summary: "Get the list of payment link's transactions"
      operationId: paylinksIdTransactionsPathGetPaylinkTransactions
      description: "Get the list of payment link's transactions using the payment link ID"
      tags:
      - Payment link
      parameters:
      - name: id
        description: The unique identifier for the payment link.
        in: path
        required: true
        schema:
          type: string
      - name: limit
        description: The number of transactions returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of payment link's transactions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/system:
    get:
      summary: Get system costs for payment operations
      operationId: paymentCostsChannelSystemPathGetPaymentChannelCostSystem
      description: Get system costs for payment operations
      tags:
      - Onboarding
      parameters:
      - name: name
        description: "The payment method's name."
        in: query
        required: true
        schema:
          type: string
      - name: region
        description: "The region name. Available values: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific."
        in: query
        required: true
        schema:
          type: string
      - name: country
        description: The country code.
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns system costs for payment operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostSystemList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create system costs for payments operations
      operationId: paymentCostsChannelSystemPathSetPaymentChannelCostSystem
      description: Create system costs for payments operations
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentChannelCostSystem"
      responses:
        "200":
          description: Returns system costs for payments operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostSystem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/merchant/{merchant_id}:
    get:
      summary: Get system costs for payment operations
      operationId: paymentCostsChannelMerchantPathGetPaymentChannelCostMerchant
      description: Get system costs for payment operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: payout_currency
        description: The payout currency.
        in: query
        required: true
        schema:
          type: string
      - name: amount
        description: The payout amount.
        in: query
        required: true
        schema:
          type: integer
      - name: name
        description: "The payment method's name."
        in: query
        required: true
        schema:
          type: string
      - name: region
        description: "The region name. Available values: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific."
        in: query
        required: true
        schema:
          type: string
      - name: country
        description: The country code.
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns system costs for payment operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete merchant costs for payment operations
      operationId: paymentCostsChannelMerchantPathDeletePaymentChannelCostMerchant
      description: Delete merchant costs for payment operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the cost was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create merchant costs for payments operations
      operationId: paymentCostsChannelMerchantPathSetPaymentChannelCostMerchant
      description: Create merchant costs for payments operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentChannelCostMerchant"
      responses:
        "200":
          description: Returns merchant costs for payments operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/system:
    get:
      summary: Get system costs for money back operations
      operationId: paymentCostsMoneyBackSystemPathGetMoneyBackCostSystem
      description: Get system costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: name
        description: "The payment method's name."
        in: query
        required: true
        schema:
          type: string
      - name: undo_reason
        description: "The return reason. Available values: refund, reversal, chargeback."
        in: query
        required: true
        schema:
          type: string
      - name: payout_currency
        description: The payout currency.
        in: query
        required: true
        schema:
          type: string
      - name: payment_stage
        description: The payout stage.
        in: query
        required: true
        schema:
          type: integer
      - name: days
        description: The number of days after the payment operation.
        in: query
        required: true
        schema:
          type: integer
      - name: region
        description: "The region name. Available values: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific."
        in: query
        required: true
        schema:
          type: string
      - name: country
        description: The country code.
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns system costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostSystem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create system costs for money back operations
      operationId: paymentCostsMoneyBackSystemPathSetMoneyBackCostSystem
      description: Create system costs for money back operations
      tags:
      - Onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoneyBackCostSystem"
      responses:
        "200":
          description: Returns system costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostSystem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/merchant/{merchant_id}:
    get:
      summary: Get merchant costs for money back operations
      operationId: paymentCostsMoneyBackMerchantPathGetMoneyBackCostMerchant
      description: Get merchant costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: name
        description: "The payment method's name."
        in: query
        required: true
        schema:
          type: string
      - name: undo_reason
        description: "The return reason. Available values: refund, reversal, chargeback."
        in: query
        required: true
        schema:
          type: string
      - name: payout_currency
        description: The payout currency.
        in: query
        required: true
        schema:
          type: string
      - name: payment_stage
        description: The payout stage.
        in: query
        required: true
        schema:
          type: integer
      - name: days
        description: The number of days after the payment operation.
        in: query
        required: true
        schema:
          type: integer
      - name: region
        description: "The region name. Available values: CIS, Russia, West Asia, EU, North America, Central America, South America, United Kingdom, Worldwide, South Pacific."
        in: query
        required: true
        schema:
          type: string
      - name: country
        description: The country code.
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns merchant costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete merchant costs for money back operations
      operationId: paymentCostsMoneyBackMerchantPathDeleteMoneyBackCostMerchant
      description: Delete merchant costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the cost was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create merchant costs for money back operations
      operationId: paymentCostsMoneyBackMerchantPathSetMoneyBackCostMerchant
      description: Create merchant costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoneyBackCostMerchant"
      responses:
        "200":
          description: Returns merchant costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/system/{id}:
    delete:
      summary: Delete the system cost for payment operations
      operationId: paymentCostsChannelSystemIdPathDeletePaymentChannelCostSystem
      description: Delete the system cost for payment operations
      tags:
      - Onboarding
      parameters:
      - name: id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the cost was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update system costs for payments operations
      operationId: paymentCostsChannelSystemIdPathSetPaymentChannelCostSystem
      description: Update system costs for payments operations
      tags:
      - Onboarding
      parameters:
      - name: id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentChannelCostSystem"
      responses:
        "200":
          description: Returns system costs for payments operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostSystem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/system/{id}:
    delete:
      summary: Delete the system cost for money back operations
      operationId: paymentCostsMoneyBackSystemIdPathDeleteMoneyBackCostSystem
      description: Delete the system cost for money back operations
      tags:
      - Onboarding
      parameters:
      - name: id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the cost was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create system costs for money back operations
      operationId: paymentCostsMoneyBackSystemIdPathSetMoneyBackCostSystem
      description: Create system costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoneyBackCostSystem"
      responses:
        "200":
          description: Returns system costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostSystem"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/merchant/{merchant_id}/{rate_id}:
    put:
      summary: Update merchant costs for payments operations
      operationId: paymentCostsChannelMerchantIdsPathSetPaymentChannelCostMerchant
      description: Update merchant costs for payments operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: rate_id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentChannelCostMerchant"
      responses:
        "200":
          description: Returns merchant costs for payments operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/merchant/{merchant_id}/{rate_id}:
    put:
      summary: Update merchant costs for money back operations
      operationId: paymentCostsMoneyBackMerchantIdsPathSetMoneyBackCostMerchant
      description: Update merchant costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: rate_id
        description: The unique identifier for the cost.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoneyBackCostMerchant"
      responses:
        "200":
          description: Returns merchant costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostMerchant"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/system/all:
    get:
      summary: Get all system costs for payments
      operationId: paymentCostsChannelSystemAllPathGetAllPaymentChannelCostSystem
      description: Get all system costs for payments
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns the all system costs for payments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostSystemList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/channel/merchant/{merchant_id}/all:
    get:
      summary: Get all merchant costs for payments
      operationId: paymentCostsChannelMerchantAllPathGetAllPaymentChannelCostMerchant
      description: Get all merchant costs for payments
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns all merchant costs for payments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentChannelCostMerchantList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/system/all:
    get:
      summary: Get all system costs for the money back operations
      operationId: paymentCostsMoneyBackAllPathGetAllMoneyBackCostSystem
      description: Get all system costs for money back operations
      tags:
      - Onboarding
      responses:
        "200":
          description: Returns all system costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostSystemList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_costs/money_back/merchant/{merchant_id}/all:
    get:
      summary: Get all merchant costs for money back operations
      operationId: paymentCostsMoneyBackMerchantAllPathGetAllMoneyBackCostMerchant
      description: Get all merchant costs for money back operations
      tags:
      - Onboarding
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns all merchant costs for money back operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoneyBackCostMerchantList"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_method:
    post:
      summary: Create a payment method of the payment system
      operationId: paymentMethodPathCreate
      description: Create a payment method for the payment system
      tags:
      - Payment method
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: Returns the status of creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_method/{id}:
    put:
      summary: Update the payment method of the payment system
      operationId: paymentMethodIdPathUpdate
      description: Update the payment method for the payment system
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: Returns the status of update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_method/{id}/production:
    get:
      summary: Get the production settings
      operationId: paymentMethodProductionPathGetProductionSettings
      description: Get the production settings
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      - name: currency_a3
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      - name: operating_company_id
        description: The unique identifier for the operation company.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the production settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentMethodSettingsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Add production settings of the payment method
      operationId: paymentMethodProductionPathCreateProductionSettings
      description: Add production settings of the payment method
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodParams"
      responses:
        "200":
          description: Returns the status of creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the production settings
      operationId: paymentMethodProductionPathUpdateProductionSettings
      description: Update the production settings
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodParams"
      responses:
        "200":
          description: Returns the status of update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the production settings of the payment method
      operationId: paymentMethodProductionPathDeleteProductionSettings
      description: Delete the production settings of the payment method
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      - name: currency_a3
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      - name: operating_company_id
        description: The unique identifier for the operation company.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the status of deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payment_method/{id}/test:
    get:
      summary: Get the testing settings
      operationId: paymentMethodTestPathGetTestSettings
      description: Get the testing settings
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      - name: currency_a3
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      - name: operating_company_id
        description: The unique identifier for the operation company.
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the testing settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentMethodSettingsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Add testing settings of the payment method
      operationId: paymentMethodTestPathCreateTestSettings
      description: Add testing settings of the payment method
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodParams"
      responses:
        "200":
          description: Returns the status of creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the testing settings of the payment method
      operationId: paymentMethodTestPathUpdateTestSettings
      description: Update the testing settings of the payment method
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodParams"
      responses:
        "200":
          description: Returns the status of update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the testing settings of the payment method
      operationId: paymentMethodTestPathDeleteTestSettings
      description: Delete the testing settings of the payment method
      tags:
      - Payment method
      parameters:
      - name: id
        description: The unique identifier for the payment method.
        in: path
        required: true
        schema:
          type: string
      - name: currency_a3
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: false
        schema:
          type: string
      - name: mcc_code
        description: "The Merchant Category Code (MCC) is a four-digit number listed in ISO 18245."
        in: query
        required: true
        schema:
          type: string
      - name: operating_company_id
        description: The unique identifier for the operation company.
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethodParams"
      responses:
        "200":
          description: Returns the status of deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePaymentMethodParamsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/payment_min_limit_system:
    get:
      summary: Get the list of the payment system limits
      operationId: paymentMinLimitSystemPathGetPaymentMinLimitSystemList
      description: Get the list of the payment system limits
      tags:
      - Limits
      responses:
        "200":
          description: "Returns the operating company's payment system limits"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OperatingCompany"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Set the payment system limits
      operationId: paymentMinLimitSystemPathSetPaymentMinLimitSystem
      description: Set the payment system limits
      tags:
      - Limits
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMinLimitSystem"
      responses:
        "204":
          description: Returns an empty response body if the system limits were successfully set
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/payout_documents:
    get:
      summary: Get the list of payout documents
      operationId: payoutsPathGetPayoutDocumentsList
      description: Get the list of payout documents. This list can be filtered.
      tags:
      - Payouts
      parameters:
      - name: payout_document_id
        description: The unique identifier for the payout document.
        in: query
        required: false
        schema:
          type: string
      - name: status
        description: "The list of documents' statuses. Available values: skip, pending, in_progress, paid, canceled, failed."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: date_from
        description: The payout period start date.
        in: query
        required: false
        schema:
          type: integer
      - name: date_to
        description: The payout period end date.
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of documents returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the list of the payout documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutDocumentsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create the payout documents
      operationId: payoutsPathCreatePayoutDocument
      description: Create the payout documents
      tags:
      - Payouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePayoutDocumentRequest"
      responses:
        "200":
          description: Returns the list of the payout documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PayoutDocument"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/payout_documents/{payout_document_id}:
    get:
      summary: Get the payout document
      operationId: payoutsIdPathGetPayoutDocument
      description: Get the payout document using the payout document ID
      tags:
      - Payouts
      parameters:
      - name: payout_document_id
        description: The unique identifier for the payout document.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the payout document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutDocument"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/payout_documents/{payout_document_id}/download:
    post:
      summary: Export the payout document
      operationId: payoutsIdDownloadPathDownloadPayoutDocument
      description: Export the payout document using the payout document ID
      tags:
      - Payouts
      parameters:
      - name: payout_document_id
        description: The unique identifier for the payout document.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFile"
      responses:
        "200":
          description: Returns the payout document file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/payout_documents/{payout_document_id}:
    post:
      summary: Update the payout document
      operationId: payoutsIdPathUpdatePayoutDocument
      description: Update the payout document using the payout document ID
      tags:
      - Payouts
      parameters:
      - name: payout_document_id
        description: The unique identifier for the payout document.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePayoutDocumentRequest"
      responses:
        "200":
          description: Returns the payout document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutDocument"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/payout_documents/{payout_document_id}/reports:
    get:
      summary: Get the royalty reports in the payout documents
      operationId: payoutsIdReportsPathGetPayoutRoyaltyReports
      description: Get the royalty reports in the payout documents
      tags:
      - Payouts
      parameters:
      - name: payout_document_id
        description: The unique identifier for the payout document.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of the payout documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoyaltyReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/country:
    get:
      summary: Get the currency and region
      operationId: priceGroupCountryPathGetPriceGroupByCountry
      description: "Get the currency and region using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: The country code.
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the country's region and currency"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroup"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/currencies:
    get:
      summary: Get the list of currencies
      operationId: priceGroupCurrenciesPathGetCurrencyList
      description: "Get the full list of currencies with information about regions and countries using the country's name"
      tags:
      - Price group
      parameters:
      - name: country
        description: The country code.
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: The postal code. Required for US.
        in: query
        required: true
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns a full list of currencies with information about regions and countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/price_group/region:
    get:
      summary: Get the currency and the list of countries
      operationId: priceGroupRegionPathGetCurrencyByRegion
      description: Get the currency and the list of countries using the region
      tags:
      - Price group
      parameters:
      - name: region
        description: "The country region's name."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the currency and the list of countries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceGroupCurrenciesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/conversion:
    get:
      summary: Get recommended currency conversion prices based on exchange rates
      operationId: pricingRecommendedConversionPathGetRecommendedByConversion
      description: Calculation of recommended currency conversion prices for regions based on the exchange rates
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/steam:
    get:
      summary: Get recommended currency conversion prices based on based on the Steam price ranges
      operationId: pricingRecommendedSteamPathGetRecommendedBySteam
      description: Calculation of recommended currency conversion prices based on the Steam price ranges taking the regional factors into account
      tags:
      - Pricing
      parameters:
      - name: amount
        description: The amount of price.
        in: query
        required: true
        schema:
          type: string
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of recommended currency conversion prices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/pricing/recommended/table:
    get:
      summary: Get ranges of recommended currency conversion prices
      operationId: pricingRecommendedTablePathGetRecommendedTable
      description: Get the table of recommended currency conversion prices ranges
      tags:
      - Pricing
      parameters:
      - name: currency
        description: "Three-letter currency code by ISO 4217, in uppercase."
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the table of recommended currency conversion prices ranges
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendedPriceTableResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products:
    get:
      summary: Get the list of products
      operationId: productsPathGetProductsList
      description: Get the list of products for the authorized user
      tags:
      - Product
      parameters:
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of products for the authorized user. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Create a product
      operationId: productsPathCreateProduct
      description: Create a new product in the project
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the created product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/products/merchant/{merchant_id}:
    get:
      summary: Get the list of products using the merchant ID
      operationId: productsMerchantPathGetProductsList
      description: Get the list of products using the merchant ID
      tags:
      - Product
      parameters:
      - name: merchant_id
        description: The unique identifier for the merchant.
        in: path
        required: true
        schema:
          type: string
      - name: name
        description: "The product's name."
        in: query
        required: false
        schema:
          type: string
      - name: sku
        description: The SKU of the product.
        in: query
        required: false
        schema:
          type: string
      - name: project_id
        description: The unique identifier for the project.
        in: query
        required: false
        schema:
          type: string
      - name: enabled
        description: "The status of whether the product is enabled. Available values: all, true, false."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of products returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the list of merchant's products. This list can be filtered by the product's name, SKU, status and the project ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}:
    get:
      summary: Get the product
      operationId: productsIdPathGetProduct
      description: Get the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the product
      operationId: productsIdPathDeleteProduct
      description: Delete the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Returns an empty response body if the product was successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: Update the product
      operationId: productsIdPathUpdateProduct
      description: Update the product using the product ID
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Returns the updated product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/products/{product_id}/prices:
    get:
      summary: "Get the product's prices"
      operationId: productsPricesPathGetProductPrices
      description: "Get the product's prices using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns the list of the product's prices"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPricesResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    put:
      summary: "Set the product's price"
      operationId: productsPricesPathUpdateProductPrices
      description: "Set the product's price using the product ID"
      tags:
      - Product
      parameters:
      - name: product_id
        description: The unique identifier for the product.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductPrice"
      responses:
        "200":
          description: "Returns an empty response body if the product's price was successfully set"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects:
    post:
      summary: Create a new project
      operationId: projectsPathCreateProject
      description: Create a new project
      tags:
      - Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "201":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the list of projects
      operationId: projectsPathListProjects
      description: Get the list of projects for the authorized merchant
      tags:
      - Project
      parameters:
      - name: limit
        description: The number of projects returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      - name: quick_search
        description: "The quick search by the project's name."
        in: query
        required: false
        schema:
          type: string
      - name: status
        description: "The list of the project's statuses."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: sort
        description: "The list of the project's fields for sorting."
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
      responses:
        "200":
          description: "Returns the list of projects. The list can be filtered by the project's name, status, and sorted by the project's fields."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProjectsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}:
    patch:
      summary: Update the project
      operationId: projectsIdPathUpdateProject
      description: Update the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    get:
      summary: Get the project data
      operationId: projectsIdPathGetProject
      description: Get the project data using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    delete:
      summary: Delete the project
      operationId: projectsIdPathDeleteProject
      description: Delete the project using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the project data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}/sku:
    post:
      summary: Check the project contains the SKU
      operationId: projectsSkuPathCheckSku
      description: Check the project contains the SKU using the project ID
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the project.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckSkuAndKeyProjectRequest"
      responses:
        "200":
          description: Returns an empty response body if the SKU was found in this project
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/report_file/download/{file_id}.{file_type}:
    get:
      summary: Export the report file
      operationId: reportFileDownloadPathDownload
      description: "Export the report file into a PDF, CSV, XLSX"
      tags:
      - Report file
      parameters:
      - name: file_id
        description: The unique identifier for the report file.
        in: path
        required: true
        schema:
          type: string
      - name: file_type
        description: "The supported file format (PDF, CSV, XLSX)."
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the report file
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Invalid request data (unable to find the file, the file string is incorrect)"
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Unable to download the file because of the internal server error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/report_file/download/{file_id}.{file_type}:
    get:
      summary: Export the report file
      operationId: reportFileDownloadPathDownloadByAdmin
      description: "Export the report file into a PDF, CSV, XLSX"
      tags:
      - Report file
      parameters:
      - name: file_id
        description: The unique identifier for the report file.
        in: path
        required: true
        schema:
          type: string
      - name: file_type
        description: "The supported file format (PDF, CSV, XLSX)."
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the report file
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: "Invalid request data (unable to find the file, the file string is incorrect)"
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Unable to download the file because of the internal server error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            text/csv:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports:
    get:
      summary: Get the royalty reports list
      operationId: royaltyReportsPathGetRoyaltyReportsList
      description: Get the royalty reports list. This list can be filtered.
      tags:
      - Royalty reports
      parameters:
      - name: period_from
        description: The first date of the period for which the report results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: period_to
        description: The last date of the period for which the report results are calculated.
        in: query
        required: false
        schema:
          type: integer
      - name: status
        description: "The list of the reports' statuses. Available values: pending, confirmed, paying, paid, dispute, canceled."
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        description: The number of reports returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the royalty reports list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoyaltyReportsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}:
    get:
      summary: Get the royalty report
      operationId: royaltyReportsIdPathGetRoyaltyReport
      description: Get the royalty report using the report ID
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the royalty report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoyaltyReport"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}/download:
    post:
      summary: Export the royalty report
      operationId: royaltyReportsIdDownloadPathDownloadRoyaltyReport
      description: Export the royalty report using the report ID
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFile"
      responses:
        "200":
          description: Returns the report file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}/transactions:
    get:
      summary: Get the transactions list included in the royalty report
      operationId: royaltyReportsTransactionsPathListRoyaltyReportOrders
      description: Get the transactions list included in the royalty report
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      - name: limit
        description: The number of transactions returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the transactions list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}/transactions/download:
    post:
      summary: Export the file of the transactions list included in the royalty report
      operationId: royaltyReportsTransactionsDownloadPathDownloadRoyaltyReportOrders
      description: Export the file of the transactions list included in the royalty report
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFile"
      responses:
        "200":
          description: Returns the file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}/accept:
    post:
      summary: Accept the royalty report by the merchant
      operationId: royaltyReportsAcceptPathMerchantReviewRoyaltyReport
      description: Accept the royalty report by the merchant
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantReviewRoyaltyReportRequest"
      responses:
        "204":
          description: Returns an empty response body if the royalty report has been successfully accepted
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/royalty_reports/{report_id}/decline:
    post:
      summary: Dispute the royalty report by the merchant
      operationId: royaltyReportsDeclinePathMerchantDeclineRoyaltyReport
      description: Dispute the royalty report by the merchant
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantReviewRoyaltyReportRequest"
      responses:
        "204":
          description: Returns an empty response body if the royalty report has been declined
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/royalty_reports/{report_id}/change:
    post:
      summary: Update the royalty report
      operationId: royaltyReportsChangePathChangeRoyaltyReport
      description: Update the royalty report
      tags:
      - Royalty reports
      parameters:
      - name: report_id
        description: The unique identifier for the royalty report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRoyaltyReportRequest"
      responses:
        "204":
          description: Returns an empty response body if the royalty report has been successfully changed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/taxes:
    get:
      summary: Get the system tax rates list
      operationId: taxesPathGetTaxes
      description: Get the system tax rates list
      tags:
      - Tax
      parameters:
      - name: zip
        description: The postal code. Required for US.
        in: query
        required: false
        schema:
          type: string
      - name: country
        description: The country code.
        in: query
        required: false
        schema:
          type: string
      - name: city
        description: "The city's name."
        in: query
        required: false
        schema:
          type: string
      - name: state
        description: "The state's name."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of taxes returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the production settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentMethodSettingsResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    post:
      summary: Edit the system tax rate
      operationId: taxesPathSetTax
      description: Create or update the system tax rate
      tags:
      - Tax
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxRate"
      responses:
        "200":
          description: Returns the tax rate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxRate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/taxes/{id}:
    delete:
      summary: Delete the system tax rate
      operationId: taxesIDPathDeleteTax
      description: Mark the system tax rate as removed
      tags:
      - Tax
      parameters:
      - name: id
        description: The unique identifier for the tax rate.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an empty response body if the tax rate has been successfully removed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/tokens:
    post:
      summary: Create a payment token
      operationId: tokenPathCreateToken
      description: "Create a payment token that encrypts details of your customer, the game and purchase parameters."
      tags:
      - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: "Returns the payment token string and the PaySuper-hosted URL for a payment form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenCreationResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/check:
    post:
      summary: Check the invitation token
      operationId: inviteCheckCheckInvite
      description: Check the invitation token
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckInviteTokenRequest"
      responses:
        "200":
          description: "Returns the user's role ID and type"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInviteTokenResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/invite/approve:
    post:
      summary: Approve the user invitation
      operationId: inviteApproveApproveInvite
      description: Approve the user invitation
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptInviteRequest"
      responses:
        "200":
          description: "Returns the user's role data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptInviteResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/merchants:
    get:
      summary: Get the list of merchants for this user
      operationId: getMerchantsGetMerchants
      description: Get the list of merchants for this user
      tags:
      - User
      responses:
        "200":
          description: Returns the list of merchants
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMerchantsForUserResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
    patch:
      summary: Create or update the user profile
      operationId: userProfilePathSetUserProfile
      description: Create or update the user profile
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/user/profile:
    get:
      summary: Get the user profile
      operationId: userProfilePathIdGetUserProfile
      description: Get the user profile
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's personal and company data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/profile/common:
    get:
      summary: Get the common user profile
      operationId: userCommonProfilePathGetUserCommonProfile
      description: "Get the user's main profile data, role, permissions"
      tags:
      - User Profile
      responses:
        "200":
          description: "Returns the user's main profile data, role and permissions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonUserProfile"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/user/confirm_email:
    put:
      summary: "Confirm the user's email"
      operationId: userProfileConfirmEmailPathConfirmEmail
      description: "Confirm the user's email using the user token"
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmUserEmailRequest"
      responses:
        "200":
          description: "Returns an empty response body if the user's email address has been successfully confirmed"
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The user not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /auth/api/v1/user/feedback:
    post:
      summary: Send the feedback
      operationId: userProfilePathFeedbackCreateFeedback
      description: Create and send the feedback using the page URL
      tags:
      - User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePageReviewRequest"
      responses:
        "200":
          description: Returns an empty response body if the feedback was successfully sent
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "401":
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports:
    get:
      summary: Get the VAT reports list for the Dashboard
      operationId: vatReportsPathGetVatReportsDashboard
      description: Get the VAT reports list for the Dashboard
      tags:
      - VAT reports
      responses:
        "200":
          description: Returns the the VAT reports list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatReportsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports/country/{country}:
    get:
      summary: Get the VAT reports list by country
      operationId: vatReportsCountryPathGetVatReportsForCountry
      description: Get the VAT reports list by country
      tags:
      - VAT reports
      parameters:
      - name: country
        description: The country code.
        in: path
        required: true
        schema:
          type: string
      - name: sort
        description: The list of VAT fields for sorting.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        description: The number of reports returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the the VAT reports list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatReportsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports/country/{country}/download:
    post:
      summary: Export the VAT reports list filtered by country
      operationId: vatReportsCountryDownloadPathDownloadVatReportsForCountry
      description: Export the VAT reports list filtered by country
      tags:
      - VAT reports
      parameters:
      - name: country
        description: The country code.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportFile"
      responses:
        "200":
          description: Returns the file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports/details/{id}:
    get:
      summary: Get the VAT report transactions
      operationId: vatReportsDetailsPathGetVatReportTransactions
      description: Get the VAT report details transactions
      tags:
      - VAT reports
      parameters:
      - name: id
        description: The unique identifier for the VAT report.
        in: path
        required: true
        schema:
          type: string
      - name: sort
        description: The list of transaction fields for sorting.
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        description: The number of transactions returned in one page. Default value is 100.
        in: query
        required: true
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: Returns the VAT report transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateTransactionsPaginate"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports/details/{id}/download:
    post:
      summary: Export the VAT report transactions
      operationId: vatReportsDetailsDownloadPathDownloadVatReportTransactions
      description: Export the VAT report details transactions
      tags:
      - VAT reports
      parameters:
      - name: id
        description: The unique identifier for the VAT report.
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the file ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFileResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /system/api/v1/vat_reports/status/{id}:
    post:
      summary: Update the VAT report status
      operationId: vatReportsStatusPathUpdateVatReportStatus
      description: Update the VAT report status
      tags:
      - VAT reports
      parameters:
      - name: id
        description: The unique identifier for the VAT report.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVatReportStatusRequest"
      responses:
        "204":
          description: Returns an empty response body if the VAT report status was successfully changed
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /admin/api/v1/projects/{project_id}/webhook/testing:
    post:
      summary: "Test the project's webhook settings"
      operationId: testMerchantWebhookPathSendWebhookTest
      description: "Test the project's webhook settings"
      tags:
      - Project
      parameters:
      - name: project_id
        description: The unique identifier for the Project found in the merchant account in the PaySuper Dashboard.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
      responses:
        "200":
          description: Returns the unique identifier for the order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendWebhookToMerchantResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/zip:
    get:
      summary: Search the city
      operationId: zipCodePathCheckZip
      description: Search the city using the country (and the ZIP code for US)
      tags:
      - Country
      parameters:
      - name: country
        description: The country code.
        in: query
        required: true
        schema:
          type: string
      - name: zip
        description: "The postal code. It's required for US."
        in: query
        required: false
        schema:
          type: string
      - name: limit
        description: The number of objects returned in one page. Default value is 100.
        in: query
        required: false
        schema:
          type: integer
      - name: offset
        description: The ranking number of the first item on the page.
        in: query
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the country data (region, city, and others)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindByZipCodeResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: The country not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
openapi: "3.0.2"